Voici comment connecter ta VM Ubuntu à ton repo GitHub privé en utilisant une **clé SSH** (méthode recommandée pour la sécurité et l’automatisation) :

---

## **Étapes pour connecter ta VM à ton repo GitHub privé via SSH**

### 1. **Génère une nouvelle clé SSH sur ta VM**

```bash
ssh-keygen -t ed25519 -C "vm-docker-access"
# Appuie sur Entrée pour les questions, tu peux laisser le mot de passe vide pour l'automatisation
# Ta clé publique sera dans ~/.ssh/id_ed25519.pub
```

### 2. **Copie la clé publique (`id_ed25519.pub`)**

```bash
cat ~/.ssh/id_ed25519.pub
```
- **Copie** le contenu affiché.

### 3. **Ajoute la clé à GitHub**
- Sur GitHub, va dans **Settings > SSH and GPG keys** ([lien direct](https://github.com/settings/keys))
- Clique sur **New SSH key**
- Donne-lui un nom (ex : "VM Docker Server")
- Colle ta clé publique et valide

### 4. **Teste la connexion SSH à GitHub**

```bash
ssh -T git@github.com
```
- La première fois, tu dois répondre "yes" pour accepter l’empreinte.
- Tu dois voir :  
  `Hi <ton_user>! You've successfully authenticated, but GitHub does not provide shell access.`

### 5. **Clone ou pousse vers ton repo en SSH**

- Utilise l’URL SSH du repo (et non l’URL HTTPS) :
  ```bash
  git clone git@github.com:<TON_USER>/<TON_REPO>.git
  # ou pour push
  git remote add origin git@github.com:<TON_USER>/<TON_REPO>.git
  ```

### 6. **(Optionnel) Sécurise l’accès**
- Si tu veux utiliser une clé spécifique :  
  Ajoute ceci dans `~/.ssh/config` sur la VM :
  ```
  Host github.com
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_ed25519
  ```

---

## **Résumé**
- **Génère une clé SSH sur ta VM**
- **Ajoute la clé publique dans GitHub > Settings > SSH keys**
- **Utilise l’URL SSH du repo pour cloner/pusher**
- **Pas besoin d’exposer la clé privée, elle reste sur la VM**

---

Si tu veux un script automatisé ou une configuration spécifique, demande-moi !