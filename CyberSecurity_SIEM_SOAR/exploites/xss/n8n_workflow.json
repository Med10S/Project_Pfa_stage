{
    "nodes": [
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "modsecurity-xss",
                "options": {}
            },
            "type": "n8n-nodes-base.webhook",
            "typeVersion": 2,
            "position": [
                256,
                -2144
            ],
            "id": "21c2c357-dc73-4fdf-a127-fb204faf21c0",
            "name": "Webhook",
            "webhookId": "a90f08f5-8a0a-41bc-83e7-db006342fe94"
        },
        {
            "parameters": {
                "jsCode": "/**\n * n8n Code Node: OPNsense IP Blocker\n * Final working version - 2025-08-13\n * Tested and verified working with OPNsense API\n */\n\n// Import modules (available in n8n)\nconst { URL } = require('url');\nconst https = require('https');\nconst http = require('http');\n\n// Configuration\nconst OPNSENSE_URL = \"http://192.168.181.1\";\nconst API_KEY = \"ud8fjSvMwTgX9P7fEL4eWUfbOk+3/tiBpmtMh+dQU4OkH4YiJ/iE3aQBpWPXVHpDzyMel5v3Lql98j7e\";\nconst API_SECRET = \"EzfhmRdb8Il60Ab+KQHZ5G1/zbRIU4Kgg5l6HcfQnXXOmHbH2iloqDBjih4EOmfmX1dnf8ifdNndbAND\";\nconst ALIAS_NAME = \"Black_list\";\nconst ALIAS_ID = \"2e9d5f53-be6b-4735-9f32-ffc60baea3f1\";\n\n// Get IP to block from input data or use default\nconst IP_TO_BLOCK = $input.first().json.body.raw_log.transaction.client_ip ;\n\nconsole.log(`üöÄ Starting OPNsense IP blocking for: ${IP_TO_BLOCK}`);\n\n// Helper function for API calls using native Node.js\nasync function makeApiCall(endpoint, method = 'GET', body = null) {\n    return new Promise((resolve, reject) => {\n        const fullUrl = `${OPNSENSE_URL}${endpoint}`;\n        const urlParts = new URL(fullUrl);\n        const auth = 'Basic ' + Buffer.from(API_KEY + ':' + API_SECRET).toString('base64');\n\n        const headers = {\n            'Authorization': auth,\n            'Accept': 'application/json'\n        };\n        \n        // Add Content-Type only for POST/PUT with body\n        if (method !== 'GET' && body) {\n            headers['Content-Type'] = 'application/json';\n        }\n\n        const options = {\n            hostname: urlParts.hostname,\n            port: urlParts.port || (urlParts.protocol === 'https:' ? 443 : 80),\n            path: urlParts.pathname + urlParts.search,\n            method: method,\n            headers: headers,\n            timeout: 30000,\n            rejectUnauthorized: false\n        };\n\n        const req = (urlParts.protocol === 'https:' ? https : http).request(options, (res) => {\n            let responseData = '';\n\n            res.on('data', (chunk) => {\n                responseData += chunk;\n            });\n\n            res.on('end', () => {\n                try {\n                    if (res.statusCode >= 200 && res.statusCode < 300) {\n                        const jsonResponse = JSON.parse(responseData);\n                        resolve(jsonResponse);\n                    } else {\n                        reject(new Error(`API call failed: ${res.statusCode} - ${responseData}`));\n                    }\n                } catch (parseError) {\n                    reject(new Error(`Invalid JSON response: ${parseError.message}`));\n                }\n            });\n        });\n\n        req.on('error', (error) => {\n            reject(error);\n        });\n\n        req.on('timeout', () => {\n            req.destroy();\n            reject(new Error('Request timeout'));\n        });\n\n        // Write body if present\n        if (body) {\n            req.write(JSON.stringify(body));\n        } else if (method === 'POST') {\n            req.write('');\n        }\n\n        req.end();\n    });\n}\n\n// Execute the IP blocking process\ntry {\n    // Step 1: Get current alias data\n    console.log(\"üìã Getting current alias data...\");\n    const currentData = await makeApiCall(`/api/firewall/alias/get_item/${ALIAS_ID}`);\n\n    // Extract IPs with selected == 1\n    let currentIPs = [];\n    if (currentData.alias && currentData.alias.content) {\n        const content = currentData.alias.content;\n        for (const [key, value] of Object.entries(content)) {\n            if (value && typeof value === 'object' && value.selected === 1) {\n                if (key.includes('.') && !key.startsWith('__')) {\n                    currentIPs.push(key);\n                }\n            }\n        }\n    }\n\n    console.log(`üìã Current IPs: ${currentIPs.length} found`);\n\n    // Step 2: Add new IP if not exists\n    const ipAlreadyExists = currentIPs.includes(IP_TO_BLOCK);\n    if (!ipAlreadyExists) {\n        currentIPs.push(IP_TO_BLOCK);\n        console.log(`‚ûï Adding new IP: ${IP_TO_BLOCK}`);\n    } else {\n        console.log(`‚ö†Ô∏è IP ${IP_TO_BLOCK} already exists`);\n    }\n\n    // Step 3: Update alias\n    console.log(\"üìã Updating alias...\");\n    const payload = {\n        \"alias\": {\n            \"authtype\": \"\",\n            \"categories\": \"\",\n            \"content\": currentIPs.join(\"\\n\"),\n            \"counters\": \"0\",\n            \"description\": \"automatique block by n8n\",\n            \"enabled\": \"1\",\n            \"expire\": \"\",\n            \"interface\": \"\",\n            \"name\": ALIAS_NAME,\n            \"password\": \"\",\n            \"path_expression\": \"\",\n            \"proto\": \"\",\n            \"type\": \"host\",\n            \"updatefreq\": \"0.041666666666666664\",\n            \"username\": \"\"\n        },\n        \"authgroup_content\": \"\",\n        \"network_content\": \"\"\n    };\n\n    const updateResponse = await makeApiCall(`/api/firewall/alias/set_item/${ALIAS_ID}`, 'POST', payload);\n    console.log(`‚úÖ Alias updated: ${updateResponse.result}`);\n\n    // Step 4: Apply firewall changes\n    console.log(\"üìã Applying firewall changes...\");\n    const applyResponse = await makeApiCall(\"/api/firewall/alias/reconfigure\", 'POST');\n    console.log(`‚úÖ Firewall reconfigured: ${applyResponse.status}`);\n\n    return {\n        json: {\n            success: true,\n            status_code: 200,\n            message: ipAlreadyExists ? \n                `IP ${IP_TO_BLOCK} was already in blocklist` : \n                `IP ${IP_TO_BLOCK} has been successfully blocked`,\n            ip_info: {\n                blocked_ip: IP_TO_BLOCK,\n                was_already_blocked: ipAlreadyExists,\n                current_ips: currentIPs,\n                total_ips: currentIPs.length,\n                processed_by: \"n8n-opnsense\",\n                processed_at: new Date().toISOString()\n            },\n            api_responses: {\n                update_result: updateResponse.result,\n                apply_status: applyResponse.status\n            }\n        }\n    };\n\n} catch (error) {\n    console.error('üí• IP blocking failed:', error);\n\n    return {\n        json: {\n            success: false,\n            error: error.message,\n            ip_info: {\n                blocked_ip: IP_TO_BLOCK,\n                total_ips: 0,\n                processed_by: \"n8n-opnsense\",\n                processed_at: new Date().toISOString()\n            },\n            message: `Failed to block IP ${IP_TO_BLOCK}: ${error.message}`\n        }\n    };\n}\n"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                464,
                -2144
            ],
            "id": "3aeb707f-c7e8-4eea-aeb0-0d168427227c",
            "name": "Code4"
        },
        {
            "parameters": {
                "jsCode": "/**\n * n8n Code Node: XSS Attack IP Blocking Report Generator\n * Generates beautiful HTML report for XSS attack detection and automatic IP blocking\n * Created: 2025-08-13 08:52:36 UTC by imi-SB\n */\n\n// Get data from previous nodes\nconst blockingResult = $('Code4').all()[0].json;\nconst alertData = $('Webhook').all()[0].json;\n\n// Extract essential information\nconst client_ip = alertData.body.transaction_details.client_ip;\nconst attack_type = alertData.body.alert_type;\nconst severity = alertData.body.severity;\nconst timestamp = alertData.body.timestamp;\nconst decoded_payload = Buffer.from(alertData.body.attack_details.encoded_payload, 'base64').toString('utf-8');\n\n// Current timestamp and user\nconst reportTimestamp = new Date().toISOString();\nconst reportUser = \"imi-SB\";\n\nconsole.log(`üõ°Ô∏è Generating XSS Blocking HTML report for IP ${client_ip} by ${reportUser} at ${reportTimestamp}`);\n\n// Generate the HTML report\nconst htmlReport = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>SOAR XSS Attack Report - ${client_ip}</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        \n        .security-button {\n            position: relative;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            padding: 18px 35px;\n            font-size: 1.1em;\n            font-weight: 600;\n            text-decoration: none;\n            color: white;\n            background: linear-gradient(45deg, #ff6b6b, #ee5a24, #e55039);\n            border: none;\n            border-radius: 50px;\n            box-shadow: \n                0 8px 25px rgba(238, 90, 36, 0.3),\n                0 4px 15px rgba(0, 0, 0, 0.2),\n                inset 0 1px 0 rgba(255, 255, 255, 0.2);\n            cursor: pointer;\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n            overflow: hidden;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            backdrop-filter: blur(10px);\n        }\n\n        .security-button::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n            transition: left 0.5s ease;\n        }\n\n        .security-button:hover::before {\n            left: 100%;\n        }\n\n        .security-button:hover {\n            transform: translateY(-3px) scale(1.05);\n            box-shadow: \n                0 15px 35px rgba(238, 90, 36, 0.4),\n                0 8px 25px rgba(0, 0, 0, 0.3),\n                inset 0 1px 0 rgba(255, 255, 255, 0.3);\n        }\n\n        .security-button:active {\n            transform: translateY(-1px) scale(1.02);\n            box-shadow: \n                0 5px 15px rgba(238, 90, 36, 0.4),\n                0 2px 8px rgba(0, 0, 0, 0.3);\n        }\n\n        .button-icon {\n            margin-right: 12px;\n            font-size: 1.3em;\n            animation: pulse 2s infinite;\n        }\n\n        .button-text {\n            position: relative;\n            z-index: 2;\n        }\n\n        .button-timestamp {\n            font-size: 0.8em;\n            margin-left: 10px;\n            opacity: 0.9;\n            font-weight: 400;\n        }\n\n        @keyframes pulse {\n            0%, 100% { transform: scale(1); }\n            50% { transform: scale(1.1); }\n        }\n\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 15px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n            color: white;\n            padding: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            font-size: 2.5em;\n            margin-bottom: 10px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .header .subtitle {\n            font-size: 1.2em;\n            opacity: 0.9;\n        }\n        \n        .status-banner {\n            background: ${blockingResult.success ? '#10ac84' : '#ee5a24'};\n            color: white;\n            text-align: center;\n            padding: 15px;\n            font-weight: bold;\n            font-size: 1.1em;\n        }\n        \n        .content {\n            padding: 40px;\n        }\n        \n        .section {\n            margin-bottom: 40px;\n            background: #f8f9fa;\n            border-radius: 10px;\n            padding: 25px;\n            border-left: 5px solid #667eea;\n        }\n        \n        .section h2 {\n            color: #2c3e50;\n            margin-bottom: 20px;\n            font-size: 1.8em;\n            border-bottom: 2px solid #ecf0f1;\n            padding-bottom: 10px;\n        }\n        \n        .info-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .info-card {\n            background: white;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n            border: 1px solid #e0e0e0;\n        }\n        \n        .info-card h3 {\n            color: #34495e;\n            margin-bottom: 15px;\n            font-size: 1.3em;\n            display: flex;\n            align-items: center;\n        }\n        \n        .info-card .emoji {\n            margin-right: 10px;\n            font-size: 1.5em;\n        }\n        \n        .info-item {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 10px;\n            padding: 8px 0;\n            border-bottom: 1px solid #ecf0f1;\n        }\n        \n        .info-item:last-child {\n            border-bottom: none;\n        }\n        \n        .info-label {\n            font-weight: 600;\n            color: #555;\n        }\n        \n        .info-value {\n            color: #2c3e50;\n            word-break: break-all;\n        }\n        \n        .success {\n            color: #27ae60;\n            font-weight: bold;\n        }\n        \n        .warning {\n            color: #f39c12;\n            font-weight: bold;\n        }\n        \n        .error {\n            color: #e74c3c;\n            font-weight: bold;\n        }\n        \n        .critical {\n            background: #fff5f5;\n            border: 2px solid #fc8181;\n            border-radius: 8px;\n            padding: 15px;\n            margin: 15px 0;\n        }\n        \n        .code-block {\n            background: #2d3748;\n            color: #e2e8f0;\n            padding: 15px;\n            border-radius: 5px;\n            margin: 10px 0;\n            font-family: 'Courier New', monospace;\n            font-size: 0.9em;\n            overflow-x: auto;\n        }\n        \n        .tag {\n            display: inline-block;\n            background: #667eea;\n            color: white;\n            padding: 5px 12px;\n            border-radius: 20px;\n            margin: 3px;\n            font-size: 0.85em;\n        }\n        \n        .blocked-tag {\n            background: #e74c3c;\n        }\n        \n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 20px;\n            font-size: 0.9em;\n        }\n        \n        .timeline {\n            position: relative;\n            padding-left: 30px;\n        }\n        \n        .timeline::before {\n            content: '';\n            position: absolute;\n            left: 15px;\n            top: 0;\n            bottom: 0;\n            width: 2px;\n            background: #667eea;\n        }\n        \n        .timeline-item {\n            position: relative;\n            margin-bottom: 20px;\n            background: white;\n            padding: 15px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .timeline-item::before {\n            content: '';\n            position: absolute;\n            left: -22px;\n            top: 20px;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background: #667eea;\n            border: 3px solid white;\n        }\n        \n        .ip-list {\n            background: #f7fafc;\n            padding: 15px;\n            border-radius: 5px;\n            margin: 10px 0;\n            font-family: 'Courier New', monospace;\n        }\n        \n        @media (max-width: 768px) {\n            .info-grid {\n                grid-template-columns: 1fr;\n            }\n            \n            .header h1 {\n                font-size: 2em;\n            }\n            \n            .content {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <h1>üõ°Ô∏è XSS Attack Blocked - IP Quarantine Report</h1>\n            <div class=\"subtitle\">ModSecurity WAF Detection & Automatic Response</div>\n        </div>\n        \n        <!-- Status Banner -->\n        <div class=\"status-banner\">\n            ${blockingResult.success ? \n                `‚úÖ IP ${client_ip} Successfully Blocked in OPNsense Firewall` : \n                `‚ùå Failed to Block IP ${client_ip} - Manual Intervention Required`}\n        </div>\n        \n        <!-- Content -->\n        <div class=\"content\">\n            <!-- Attack Overview -->\n            <div class=\"section\">\n                <h2>üö® XSS Attack Overview</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üéØ</span>Attack Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Attack Type:</span>\n                            <span class=\"info-value error\">${attack_type}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Severity:</span>\n                            <span class=\"info-value ${severity === 'HIGH' ? 'error' : 'warning'}\">${severity}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source IP:</span>\n                            <span class=\"info-value error\">${client_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Target Host:</span>\n                            <span class=\"info-value\">${alertData.body.transaction_details.host_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection Time:</span>\n                            <span class=\"info-value\">${timestamp}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Rule ID:</span>\n                            <span class=\"info-value\">${alertData.body.attack_details.rule_id}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üåê</span>HTTP Request Details</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Method:</span>\n                            <span class=\"info-value\">${alertData.body.transaction_details.http_method}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">URI:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.transaction_details.uri.substring(0, 50)}...</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">User Agent:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.transaction_details.user_agent.substring(0, 40)}...</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Response Code:</span>\n                            <span class=\"info-value warning\">${alertData.body.transaction_details.response_code}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Classification:</span>\n                            <span class=\"info-value error\">${alertData.body.xss_classification}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Vector:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_vector}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"critical\">\n                    <h3>üö® Malicious Payload Detected</h3>\n                    <p><strong>Rule Message:</strong> ${alertData.body.attack_details.rule_message}</p>\n                    <p><strong>Match Data:</strong> ${alertData.body.attack_details.match_data}</p>\n                </div>\n                \n                <div style=\"margin-top: 15px;\">\n                    <strong>Attack Tags:</strong>\n                    <span class=\"tag\">XSS</span>\n                    <span class=\"tag\">Script Injection</span>\n                    <span class=\"tag\">${alertData.body.severity}</span>\n                    <span class=\"tag blocked-tag\">BLOCKED</span>\n                </div>\n            </div>\n            \n            <!-- Payload Analysis -->\n            <div class=\"section\">\n                <h2>üîç Payload Analysis</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üíæ</span>Encoded Payload</h3>\n                        <div class=\"code-block\">${alertData.body.attack_details.encoded_payload.substring(0, 100)}...</div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Payload Length:</span>\n                            <span class=\"info-value\">${alertData.body.attack_details.payload_length} bytes</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üîì</span>Decoded Payload</h3>\n                        <div class=\"code-block\">${decoded_payload.substring(0, 200)}${decoded_payload.length > 200 ? '...' : ''}</div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Decoded URI:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.transaction_details.decoded_uri.substring(0, 50)}...</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Blocking Results -->\n            <div class=\"section\">\n                <h2>üö´ Automatic IP Blocking Results</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üõ°Ô∏è</span>Blocking Status</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Block Status:</span>\n                            <span class=\"info-value ${blockingResult.success ? 'success' : 'error'}\">\n                                ${blockingResult.success ? '‚úÖ SUCCESS' : '‚ùå FAILED'}\n                            </span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">HTTP Status:</span>\n                            <span class=\"info-value\">${blockingResult.status_code}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Was Already Blocked:</span>\n                            <span class=\"info-value\">${blockingResult.ip_info.was_already_blocked ? 'Yes' : 'No'}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed By:</span>\n                            <span class=\"info-value\">${blockingResult.ip_info.processed_by}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed At:</span>\n                            <span class=\"info-value\">${blockingResult.ip_info.processed_at}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Update Result:</span>\n                            <span class=\"info-value success\">${blockingResult.api_responses.update_result}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Apply Status:</span>\n                            <span class=\"info-value success\">${blockingResult.api_responses.apply_status}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üìã</span>Blocked IPs List</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Total Blocked IPs:</span>\n                            <span class=\"info-value\">${blockingResult.ip_info.total_ips}</span>\n                        </div>\n                        <div class=\"ip-list\">\n                            <strong>Currently Blocked IPs:</strong><br>\n                            ${blockingResult.ip_info.current_ips.map(ip => \n                                `<span style=\"color: ${ip === client_ip ? '#e74c3c' : '#2c3e50'};\">\n                                    ${ip}${ip === client_ip ? ' ‚Üê NEW' : ''}\n                                </span>`\n                            ).join('<br>')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Mitigation Details -->\n            <div class=\"section\">\n                <h2>üîí Mitigation Details</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üõ†Ô∏è</span>WAF Response</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Initial Status:</span>\n                            <span class=\"info-value warning\">${alertData.body.mitigation.status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">WAF Engine:</span>\n                            <span class=\"info-value\">${alertData.body.mitigation.waf_engine}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Action Required:</span>\n                            <span class=\"info-value\">${alertData.body.mitigation.action_required}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Initially Blocked:</span>\n                            <span class=\"info-value\">${alertData.body.mitigation.blocked ? 'Yes' : 'No'}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üöÄ</span>SOAR Response</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Automation:</span>\n                            <span class=\"info-value success\">Automatic IP Blocking</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Response Time:</span>\n                            <span class=\"info-value\">< 5 seconds</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Firewall Updated:</span>\n                            <span class=\"info-value success\">Yes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Analyst:</span>\n                            <span class=\"info-value\">${alertData.body.analyst}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Environment:</span>\n                            <span class=\"info-value\">${alertData.body.environment}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Processing Timeline -->\n            <div class=\"section\">\n                <h2>‚è±Ô∏è Response Timeline</h2>\n                <div class=\"timeline\">\n                    <div class=\"timeline-item\">\n                        <strong>XSS Attack Detected</strong><br>\n                        <span style=\"color: #666;\">${timestamp}</span><br>\n                        ModSecurity WAF detected ${alertData.body.xss_classification} attack from ${client_ip}\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>WAF Response</strong><br>\n                        <span style=\"color: #666;\">${timestamp}</span><br>\n                        Request blocked with HTTP 403 - ${alertData.body.attack_details.rule_message}\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>SOAR Alert Triggered</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.webhookUrl.includes('5678') ? Date.now() : timestamp).toLocaleString()}</span><br>\n                        n8n workflow triggered for automatic response\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>IP Blocked in Firewall</strong><br>\n                        <span style=\"color: #666;\">${blockingResult.ip_info.processed_at}</span><br>\n                        IP ${client_ip} added to OPNsense blocked IPs list and firewall rules applied\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Report Generated</strong><br>\n                        <span style=\"color: #666;\">${reportTimestamp}</span><br>\n                        Comprehensive security report generated by ${reportUser}\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Technical Details -->\n            <div class=\"section\">\n                <h2>üîß Technical Details</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üìä</span>Transaction Info</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Unique ID:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.transaction_details.unique_id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Server ID:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.transaction_details.server_id.substring(0, 20)}...</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Client Port:</span>\n                            <span class=\"info-value\">${alertData.body.transaction_details.client_port}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Host Port:</span>\n                            <span class=\"info-value\">${alertData.body.transaction_details.host_port}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">üîç</span>Detection Engine</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Rule File:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.attack_details.rule_file}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Line Number:</span>\n                            <span class=\"info-value\">${alertData.body.attack_details.line_number}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Rule Severity:</span>\n                            <span class=\"info-value\">${alertData.body.attack_details.rule_severity}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source:</span>\n                            <span class=\"info-value\">${alertData.body.source}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Action Button -->\n        <div style=\"text-align: center; padding: 30px 0;\">\n            <a href=\"https://opnsense.sbihi.soar.ma/firewall_aliases.php\" class=\"security-button\">\n                <span class=\"button-icon\">üö´</span>\n                <span class=\"button-text\">View Blocked IPs</span>\n                <span class=\"button-timestamp\">${new Date().toTimeString().substring(0, 5)}</span>\n            </a>\n        </div>\n        \n        <!-- Footer -->\n        <div class=\"footer\">\n            <p>üõ°Ô∏è Generated by SOAR Platform | User: ${reportUser} | ${reportTimestamp}</p>\n            <p>ModSecurity WAF + OPNsense Firewall | Powered by n8n Automation</p>\n        </div>\n    </div>\n</body>\n</html>\n`;\n\nconsole.log(`‚úÖ XSS Blocking HTML report generated successfully - ${htmlReport.length} characters`);\n\n// Return the complete report data\nreturn {\n    json: {\n        success: true,\n        report_generated_by: reportUser,\n        report_generated_at: reportTimestamp,\n        attack_ip: client_ip,\n        attack_type: attack_type,\n        blocking_successful: blockingResult.success,\n        reporte: htmlReport,\n        summary: {\n            to: \"soc-team@sbihi.soar.ma\",\n            subject: `üö® XSS Attack Blocked - IP ${client_ip} Quarantined`,\n            attack_type: attack_type,\n            severity: severity,\n            source_ip: client_ip,\n            target_host: alertData.body.transaction_details.host_ip,\n            detection_time: timestamp,\n            blocking_status: blockingResult.success ? \"SUCCESS\" : \"FAILED\",\n            total_blocked_ips: blockingResult.ip_info.total_ips,\n            analyst: alertData.body.analyst,\n            environment: alertData.body.environment\n        }\n    }\n};"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                880,
                -2304
            ],
            "id": "08bbd075-1aef-4a01-859d-4a877ffa8506",
            "name": "HTML report Generator3"
        },
        {
            "parameters": {
                "fromEmail": "admin@sbihi.soar.ma",
                "toEmail": "={{ $json.summary.to }}",
                "subject": "=üö® {{ $json.summary.severity }} :{{ $json.summary.subject }}  - Alert {{ $('TheHive - Phase 1 Alert1').item.json._id }}",
                "html": "={{ $json.reporte }}",
                "options": {}
            },
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2.1,
            "position": [
                1216,
                -2304
            ],
            "id": "d280c81e-5e36-41bf-a422-83491305c00d",
            "name": "Send email6",
            "webhookId": "a8fa8078-4f8a-499c-b12b-ae2b191004a8",
            "credentials": {
                "smtp": {
                    "id": "zCBfpjwyWbps8Afk",
                    "name": "SMTP account"
                }
            }
        },
        {
            "parameters": {
                "chatId": "@SOC_Team",
                "text": "=üö® {{ $json.summary.subject }} üö®\n\n\nüìç Target: {{ $('Webhook').item.json.body.transaction_details.referer }}\nüéØ Attacker: {{ $('Webhook').item.json.body.transaction_details.client_ip }}\n‚ö†Ô∏è Phase: Blocked\nüïê Time: {{ $('Webhook').item.json.body.timestamp }}\n\nüö® IMMEDIATE ACTIONS:\n‚Ä¢ all done for you\n‚Ä¢ the source was blocked if you need to give it acces check the black-list alias in you firewall\n\nüìß Full details sent via email\nüìã TheHive case created\n\n#EternalBlue #CriticalIncident #MedicalSecurity",
                "replyMarkup": "inlineKeyboard",
                "inlineKeyboard": {
                    "rows": [
                        {
                            "row": {
                                "buttons": [
                                    {
                                        "text": "üëÅÔ∏è See the Alert",
                                        "additionalFields": {
                                            "url": "=http://thehive.sbihi.soar.ma/alerts/{{ $('TheHive - Phase 1 Alert1').item.json._id }}/details"
                                        }
                                    },
                                    {
                                        "text": "üî• See the firewall",
                                        "additionalFields": {
                                            "url": "http://opnsense.sbihi.soar.ma/ui/firewall/alias"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "additionalFields": {}
            },
            "id": "552abccf-4009-4956-9615-d4e4623c64d8",
            "name": "Telegram Medical Alert4",
            "type": "n8n-nodes-base.telegram",
            "typeVersion": 1.1,
            "position": [
                1216,
                -2144
            ],
            "webhookId": "3376df6d-e30c-4813-b05c-d592f07c0250",
            "credentials": {
                "telegramApi": {
                    "id": "LOwniAO8FUxNCyIK",
                    "name": "Telegram account"
                }
            }
        },
        {
            "parameters": {
                "title": "={{ $('Webhook').item.json.body.attack_details.rule_message }}",
                "description": "=**{{ $('Webhook').item.json.body.attack_details.rule_message }}**\n\n**Attack Details:**\n- Source IP: {{ $json.ip_info.blocked_ip }}\n- Target IP: {{ $('Webhook').item.json.body.transaction_details.referer }}\n- Type: {{ $('Webhook').item.json.body.alert_type }}\n- Attack Status: Blocked\n- Detection Time: {{ $('Webhook').item.json.body.raw_log.transaction.time_stamp }}\n**Signature:** {{ $('Webhook').item.json.body.attack_details.match_data }}\n\n\n\n**Priority:**  blocked for you - Check The black-list alias i yours Firewall",
                "date": "={{ $('Webhook').item.json.body.raw_log.transaction.time_stamp }}",
                "tags": "={{ $('Webhook').item.json.body.alert_type }}",
                "type": "={{ $('Webhook').item.json.body.alert_type }}",
                "source": "={{ $('Webhook').item.json.body.source }}",
                "sourceRef": "={{ $('Webhook').item.json.body.transaction_details.client_ip }}",
                "additionalFields": {}
            },
            "id": "eecff121-6d09-4693-b674-eae48d12bf8c",
            "name": "TheHive - Phase 1 Alert1",
            "type": "n8n-nodes-base.theHive",
            "typeVersion": 1,
            "position": [
                688,
                -2288
            ],
            "credentials": {
                "theHiveApi": {
                    "id": "gkwz9WkO0XfDdoRG",
                    "name": "The Hive account"
                }
            }
        }
    ],
    "connections": {
        "Webhook": {
            "main": [
                [
                    {
                        "node": "Code4",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Code4": {
            "main": [
                [
                    {
                        "node": "TheHive - Phase 1 Alert1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "HTML report Generator3": {
            "main": [
                [
                    {
                        "node": "Send email6",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Telegram Medical Alert4",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "TheHive - Phase 1 Alert1": {
            "main": [
                [
                    {
                        "node": "HTML report Generator3",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "pinData": {
        "Webhook": [
            {
                "headers": {
                    "host": "192.168.15.3:5678",
                    "user-agent": "curl/8.12.1",
                    "accept": "*/*",
                    "content-type": "application/json",
                    "content-length": "3835"
                },
                "params": {},
                "query": {},
                "body": {
                    "timestamp": "Wed Aug 13 02:20:37 2025",
                    "source": "ModSecurity-WAF",
                    "alert_type": "XSS_Detection",
                    "severity": "CRITICAL",
                    "xss_classification": "reflected_script_injection",
                    "attack_vector": "script_tag",
                    "transaction_details": {
                        "unique_id": "175505163739.834049",
                        "server_id": "96cdab0dcc3c299aca7702607c73b4c80b317dfb",
                        "client_ip": "192.168.183.2",
                        "client_port": "56482",
                        "host_ip": "172.20.0.7",
                        "host_port": "443",
                        "http_method": "GET",
                        "http_version": "1.1",
                        "uri": "/vulnerabilities/xss_r/?name=%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E",
                        "decoded_uri": "/vulnerabilities/xss_r/?name=<script>alert('XSS')</script>",
                        "user_agent": "Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0",
                        "referer": "https://dvwa.sbihi.soar.ma/vulnerabilities/xss_r/",
                        "response_code": "403"
                    },
                    "attack_details": {
                        "rule_id": "1001",
                        "rule_message": "XSS Attack Detected and Blocked",
                        "match_data": "Matched Data: <script>alert('XSS')</script> found within ARGS:name",
                        "rule_file": "/etc/modsecurity.d/modsecurity.conf",
                        "line_number": "308",
                        "rule_severity": "2",
                        "payload_length": 59,
                        "encoded_payload": "L3Z1bG5lcmFiaWxpdGllcy94c3Nfci8/bmFtZT08c2NyaXB0PmFsZXJ0KCdYU1MnKTwvc2NyaXB0Pgo="
                    },
                    "producer_info": {
                        "modsecurity_version": "unknown",
                        "connector_version": "unknown"
                    },
                    "geolocation": {
                        "ip": "192.168.183.2",
                        "lookup_required": true
                    },
                    "mitigation": {
                        "status": "blocked",
                        "waf_engine": "ModSecurity",
                        "action_required": "investigate",
                        "blocked": true
                    },
                    "raw_log": {
                        "transaction": {
                            "client_ip": "192.168.183.2",
                            "time_stamp": "Wed Aug 13 02:20:37 2025",
                            "server_id": "96cdab0dcc3c299aca7702607c73b4c80b317dfb",
                            "client_port": 56482,
                            "host_ip": "172.20.0.7",
                            "host_port": 443,
                            "unique_id": "175505163739.834049",
                            "request": {
                                "method": "GET",
                                "http_version": 1.1,
                                "uri": "/vulnerabilities/xss_r/?name=%3Cscript%3Ealert%28%27XSS%27%29%3C%2Fscript%3E",
                                "headers": {
                                    "Upgrade-Insecure-Requests": "1",
                                    "Connection": "keep-alive",
                                    "Sec-Fetch-Mode": "navigate",
                                    "Referer": "https://dvwa.sbihi.soar.ma/vulnerabilities/xss_r/",
                                    "Accept-Encoding": "gzip, deflate, br",
                                    "Cookie": "PHPSESSID=tf4g3f5b2r0he4nvjcsm2q0i71; security=low",
                                    "Accept-Language": "en-US,en;q=0.5",
                                    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
                                    "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0",
                                    "Sec-Fetch-Site": "same-origin",
                                    "Sec-Fetch-Dest": "document",
                                    "Host": "dvwa.sbihi.soar.ma",
                                    "Sec-Fetch-User": "?1"
                                }
                            },
                            "response": {
                                "body": "<html>\r\n<head><title>403 Forbidden</title></head>\r\n<body>\r\n<center><h1>403 Forbidden</h1></center>\r\n<hr><center>nginx/1.22.1</center>\r\n</body>\r\n</html>\r\n",
                                "http_code": 403,
                                "headers": {
                                    "Server": "nginx/1.22.1",
                                    "Date": "Wed, 13 Aug 2025 02:20:37 GMT",
                                    "Content-Length": "153",
                                    "Content-Type": "text/html",
                                    "Connection": "keep-alive"
                                }
                            },
                            "producer": {
                                "modsecurity": "ModSecurity v3.0.8 (Linux)",
                                "connector": "ModSecurity-nginx v1.0.3",
                                "secrules_engine": "Enabled",
                                "components": []
                            },
                            "messages": [
                                {
                                    "message": "XSS Attack Detected and Blocked",
                                    "details": {
                                        "match": "detected XSS using libinjection.",
                                        "reference": "v33,29t:utf8toUnicode,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,t:cssDecode",
                                        "ruleId": "1001",
                                        "file": "/etc/modsecurity.d/modsecurity.conf",
                                        "lineNumber": "308",
                                        "data": "Matched Data: <script>alert('XSS')</script> found within ARGS:name",
                                        "severity": "2",
                                        "ver": "",
                                        "rev": "",
                                        "tags": [
                                            "application-multi",
                                            "language-multi",
                                            "platform-multi",
                                            "attack-xss",
                                            "OWASP_CRS",
                                            "capec/1000/152/242"
                                        ],
                                        "maturity": "0",
                                        "accuracy": "0"
                                    }
                                }
                            ]
                        }
                    },
                    "analyst": "Med10S",
                    "environment": "SOAR-Lab"
                },
                "webhookUrl": "http://sbihi.soar.ma:5678/webhook/modsecurity-xss",
                "executionMode": "production"
            }
        ],
        "TheHive - Phase 1 Alert1": [
            {
                "_id": "~8360",
                "id": "~8360",
                "createdBy": "api@sbihi.soar.ma",
                "updatedBy": null,
                "createdAt": 1755076289536,
                "updatedAt": null,
                "_type": "alert",
                "type": "XSS_Detection",
                "source": "ModSecurity-WAF",
                "sourceRef": "192.168.183.2",
                "externalLink": null,
                "case": null,
                "title": "XSS Attack Detected and Blocked",
                "description": "**XSS Attack Detected and Blocked**\n\n**Attack Details:**\n- Source IP: 192.168.183.2\n- Target IP: https://dvwa.sbihi.soar.ma/vulnerabilities/xss_r/\n- Type: XSS_Detection\n- Attack Status: Blocked\n- Detection Time: Wed Aug 13 02:20:37 2025\n**Signature:** Matched Data: <script>alert('XSS')</script> found within ARGS:name\n\n\n\n**Priority:**  blocked for you - Check The black-list alias i yours Firewall",
                "severity": 2,
                "date": 1755051637000,
                "tags": [
                    "XSS_Detection"
                ],
                "tlp": 2,
                "pap": 2,
                "status": "New",
                "stage": "New",
                "follow": true,
                "customFields": {},
                "caseTemplate": null,
                "artifacts": [],
                "similarCases": []
            }
        ]
    },
    "meta": {
        "templateCredsSetupCompleted": true,
        "instanceId": "bfdb948841afc0ce6bec55b394199f16ae888966216c89472d4c9df5a77cd278"
    }
}