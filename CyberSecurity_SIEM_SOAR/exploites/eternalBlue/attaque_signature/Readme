# EternalBlue Exploit Signature Patterns

This document outlines the key detection signatures and attack steps for the EternalBlue exploit, which targets vulnerabilities in SMBv1/SMBv2 protocols on Windows systems.

## Exploit Signature Patterns

- **Pool Grooming:** Attacker sends multiple SMBv2 packets to force allocation of contiguous SRVNET_BUFFER structures in kernel memory.
- **Memory Hole Creation:** Attacker manipulates SMBv1 connections to free a block, creating a gap between SRVNET_BUFFER structures.
- **Buffer Overflow Trigger:** Attacker sends a specially crafted SMBv1 TRANS2 packet exploiting the arithmetic bug (DWORD - WORD) in `SrvOs2FeaListSizeToNt`, causing a buffer overflow into adjacent SRVNET_BUFFER.
- **SRVNET_BUFFER Corruption:** Overflow data overwrites the function pointer in the neighboring SRVNET_BUFFER structure with the address of attacker-controlled shellcode.
- **Shellcode Placement:** Attacker's payload (kernel shellcode + user-mode reverse shell) is placed in the groomed SRVNET_BUFFER blocks during pool grooming.
- **Function Pointer Hijack:** The corrupted SRVNET_BUFFER's function pointer is invoked by Windows, executing the attacker's shellcode in kernel mode.
- **Kernel Shellcode Execution:** Shellcode searches for a target process (e.g., `spoolsv.exe`), allocates memory, injects user-mode payload, and creates a remote thread.
- **Reverse Shell Activation:** Injected user-mode payload opens a network connection to the attacker and launches a command shell, granting SYSTEM access.

## Detection Strategies

- Monitor for unusual sequences of SMBv2 and SMBv1 connections with rapid open/close patterns (pool grooming and hole creation).
  - Use network flow analysis to monitor SMB session creation/teardown rates and flag bursts or abnormal patterns.
  - Employ deep packet inspection (DPI) to identify repeated SMB payloads and high-volume SMB traffic from a single source.
  - Set IDS/IPS rules to alert on SMBv1 TRANS2 requests with suspicious size fields or malformed structure.
  - Monitor system logs for kernel memory errors, crashes, or use EDR tools to detect abnormal changes in SRVNET_BUFFER.
  - Use kernel integrity monitoring or EDR to detect execution from unexpected memory regions or non-standard code paths.
  - Monitor process/thread creation events, correlate with SMB traffic, and alert on remote thread injection in system processes.
  - Set up network monitoring to detect outbound connections from system processes, especially to uncommon external IPs/ports.

## Main Steps Required by Attacker

1. Prepare kernel memory layout via pool grooming.
2. Create a memory hole by freeing a block.
3. Trigger buffer overflow with crafted SMBv1 packet.
4. Overwrite SRVNET_BUFFER function pointer with shellcode address.
5. Place shellcode in memory during grooming.
6. Execute kernel shellcode via hijacked function pointer.
7. Inject and execute user-mode payload for remote access.
