# 🔍 EternalBlue Detection Rules - Technical Analysis

## 📋 Table of Contents
1. [Attack Overview](#attack-overview)
2. [Multi-Phase Detection Strategy](#multi-phase-detection-strategy)
3. [Phase 1: Initial Exploitation](#phase-1-initial-exploitation)
4. [Phase 2: Buffer Overflow](#phase-2-buffer-overflow)
5. [Phase 3: Success Confirmation](#phase-3-success-confirmation)
6. [Correlation Rules](#correlation-rules)
7. [Medical Environment Adaptations](#medical-environment-adaptations)
8. [SOC Response Guidelines](#soc-response-guidelines)

---

## 🎯 Attack Overview

**EternalBlue (CVE-2017-0144)** is a critical SMB vulnerability that targets the Windows SMBv1 protocol. The exploit allows remote code execution by sending specially crafted packets that cause buffer overflows in the Windows kernel.

### **Attack Progression:**
```mermaid
graph TD
    A[SMB Connection] --> B[Trans2 Exploit Attempt]
    B --> C[Buffer Overflow with AAAA Pattern]
    C --> D[Memory Corruption]
    D --> E[Kernel Code Execution]
    E --> F[System Compromise]
```

---

## 🛡️ Multi-Phase Detection Strategy

Our detection approach uses **progressive rule correlation** to track the complete attack lifecycle:

| Phase | Detection Focus | Confidence Level |
|-------|----------------|------------------|
| **Phase 1** | Initial exploitation attempts | Medium |
| **Phase 2** | Active buffer overflow | High |
| **Phase 3** | Successful compromise | Critical |
| **Correlation** | Complete attack chain | Critical |

---

## 🔍 Phase 1: Initial Exploitation

### **Rule 9000001: SMB2 Trans2 Sub-Command Detection**

```suricata
alert smb any any -> $HOME_NET any (msg: "ETERNALBLUE PHASE 1 - Initial Trans2 Sub-Command Exploitation Attempt"; 
flow: to_server, established; 
content: "|FF|SMB2|00 00 00 00|"; depth: 9; offset: 4; 
byte_test: 2, >, 0x0008, 52, relative, little; 
pcre: "/\xFFSMB2\x00\x00\x00\x00.{52}(?:\x04|\x09|\x0A|\x0B|\x0C|\x0E|\x11)\x00/s";
```

**🔍 What it detects:**
- **SMB2 Header**: `FF SMB2 00 00 00 00` - Standard SMB2 protocol identifier
- **Trans2 Sub-Commands**: Specific sub-commands used by EternalBlue:
  - `0x04`: TRANS2_FIND_FIRST2
  - `0x09`: TRANS2_CREATE_DIRECTORY
  - `0x0A`: TRANS2_SESSION_SETUP
  - `0x0B`: TRANS2_GET_DFS_REFERRAL
  - `0x0C`: TRANS2_REPORT_DFS_INCONSISTENCY
  - `0x0E`: TRANS2_QUERY_FS_INFORMATION
  - `0x11`: TRANS2_QUERY_PATH_INFORMATION

**🎯 Attack Pattern:**
EternalBlue starts by sending malformed Trans2 requests to probe the SMB service and prepare for exploitation.

---

### **Rule 9000002: SMB3 Exploit Pattern Detection**

```suricata
alert tcp any any -> any 445 (msg:"ETERNALBLUE PHASE 1 - SMB3 Exploit Pattern with Session Context"; 
content:"|00 00 10 35 ff 53 4d 42 33|"; offset:0; depth:9; 
content:"|41 41 41 41|"; distance:0; within:100;
```

**🔍 What it detects:**
- **SMB3 Signature**: `00 00 10 35 ff 53 4d 42 33`
  - `00 00 10 35`: Packet length indicator
  - `ff 53 4d 42 33`: "SMB3" protocol identifier
- **Early AAAA Pattern**: `41 41 41 41` within first 100 bytes

**🎯 Attack Pattern:**
Modern EternalBlue variants target SMB3 and include AAAA patterns early in the negotiation to test buffer boundaries.

---

## 💥 Phase 2: Buffer Overflow

### **Rule 9000003: Massive AAAA Pattern Detection**

```suricata
alert tcp any any -> any 445 (msg:"ETERNALBLUE PHASE 2 - Buffer Overflow Exploitation in Progress (Massive AAAA Pattern)"; 
content: "|41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41|"; within: 16; 
content: "|41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41|"; distance: 0; within: 1000; 
content: "|41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41|"; distance: 0; within: 1000; 
dsize: >1000;
```

**🔍 What it detects:**
- **Triple AAAA Pattern**: Three instances of 16-byte AAAA patterns
- **Large Packet Size**: Packets > 1000 bytes
- **Pattern Clustering**: AAAA patterns within 1000 bytes of each other

**🎯 Attack Mechanism:**
```
Buffer Layout During Attack:
┌─────────────────┬─────────────────┬─────────────────┐
│   SMB Header    │  AAAA AAAA...   │   Shellcode     │
├─────────────────┼─────────────────┼─────────────────┤
│  Normal Data    │  Buffer Overflow │  ROP Chain      │
└─────────────────┴─────────────────┴─────────────────┘
```

The AAAA pattern (`0x41414141`) overwrites memory structures, preparing for shellcode injection.

---

### **Rule 9000004: Kernel Pool Grooming**

```suricata
alert tcp any any -> any 445 (msg:"ETERNALBLUE PHASE 2 - SMB3 Kernel Pool Grooming Pattern"; 
content: "|fe|SMB"; offset: 4; depth: 4; 
content: "|00 00 10 35|"; distance: 0; within: 50; 
content: "|41 41 41 41|"; distance: 0; within: 2000; 
byte_test: 2, >, 1500, 2;
```

**🔍 What it detects:**
- **SMB3 Header**: `fe SMB` (SMB3 protocol)
- **Size Indicator**: `00 00 10 35` suggesting large payload
- **Memory Grooming**: AAAA patterns for heap manipulation
- **Large Payload**: Packets > 1500 bytes

**🎯 Attack Technique:**
Kernel pool grooming arranges memory layout to ensure reliable exploitation by controlling heap allocation patterns.

---

## ✅ Phase 3: Success Confirmation

### **Rule 9000006: Successful SMB Authentication**

```suricata
alert tcp any any -> any 445 (msg:"ETERNALBLUE PHASE 3 - Successful SMB Authentication After Exploitation"; 
flow: established, from_server; 
content: "|ff|SMB"; offset: 4; depth: 4; 
content: "|00 00 00 00|"; distance: 5; within: 4; 
flowbits: isset, eternalblue.phase2.overflow.detected;
```

**🔍 What it detects:**
- **Server Response**: Traffic from server after buffer overflow
- **SMB Success Code**: `00 00 00 00` indicating successful operation
- **Timing Correlation**: Only triggers after Phase 2 detection

**🎯 Compromise Indicator:**
When the server responds normally after buffer overflow, it indicates successful memory corruption and continued operation under attacker control.

---

### **Rule 9000007: New SMB Session**

```suricata
alert tcp any any -> any 445 (msg:"ETERNALBLUE PHASE 3 - New SMB Session After Exploitation"; 
content: "|ff|SMB|72|"; offset: 4; depth: 7;
```

**🔍 What it detects:**
- **SMB Session Setup**: Command `0x72` (Session Setup AndX)
- **Post-Exploitation**: New sessions established after compromise

**🎯 Attack Progression:**
Attackers establish new authenticated sessions to maintain persistence and execute commands.

---

### **Rule 9000008: Server Accepting Connections**

```suricata
alert tcp any any -> any any (msg:"ETERNALBLUE PHASE 3 - Server Accepting Connections After Exploitation"; 
flow: established, from_server; 
content: "|ff|SMB"; offset: 4; depth: 4; 
byte_test: 1, =, 0, 9;
```

**🔍 What it detects:**
- **Bidirectional Traffic**: Server actively responding
- **Status Byte Check**: Byte 9 = 0 (success status)
- **Continued Operation**: Server functioning after attack

**🎯 Critical Indicator:**
The most reliable sign of successful exploitation - the server continues to process requests normally despite being compromised.

---

## 🔗 Correlation Rules

### **Rule 9000020: Complete Attack Chain**

```suricata
alert tcp any any -> any any (msg:"ETERNALBLUE CRITICAL - Complete Attack Chain Detected (All Phases)"; 
flowbits: isset, eternalblue.phase1.detected; 
flowbits: isset, eternalblue.phase2.overflow.detected; 
flowbits: isset, eternalblue.phase3.success.detected;
```

**🔍 Correlation Logic:**
```
IF (Phase 1 Detected) AND (Phase 2 Detected) AND (Phase 3 Detected)
THEN Critical Alert: Complete EternalBlue Attack Chain
```

### **Rule 9000022: High Probability Exploitation**

```suricata
alert tcp any any -> any any (msg:"ETERNALBLUE HIGH - Exploitation Attempt with Buffer Overflow"; 
flowbits: isset, eternalblue.phase1.detected; 
flowbits: isset, eternalblue.phase2.overflow.detected;
```

**🔍 Correlation Logic:**
```
IF (Phase 1 Detected) AND (Phase 2 Detected)
THEN High Alert: Likely Successful Exploitation
```

---

## 🏥 Medical Environment Adaptations

### **Rule 9000020: Medical Device Targeting**

```suricata
alert tcp any any -> $HOME_NET [104,2761,2762,11112] (msg:"ETERNALBLUE MEDICAL - Targeting Medical Imaging Systems";
```

**🔍 Protected Ports:**
- **104**: IEC 60870-5-104 (SCADA/Medical devices)
- **2761**: DICOM imaging protocol
- **2762**: DICOM secure transport
- **11112**: ACR-NEMA (Medical imaging)

**🎯 Medical-Specific Threats:**
- PACS server compromise
- Medical imaging system disruption
- Patient data exfiltration
- Critical care system interference

---

## 🚨 SOC Response Guidelines

### **Alert Severity Levels:**

| Detection | Severity | Response Time | Actions |
|-----------|----------|---------------|---------|
| **Phase 1 Only** | 🟡 Medium | 15 minutes | Monitor, analyze traffic patterns |
| **Phase 1 + 2** | 🟠 High | 5 minutes | Immediate investigation, network isolation prep |
| **Phase 1 + 2 + 3** | 🔴 Critical | 1 minute | Emergency response, isolate affected systems |
| **Medical Target** | 🔴 Critical | 30 seconds | Emergency protocol, notify medical staff |

### **Incident Response Workflow:**

```mermaid
graph TD
    A[EternalBlue Alert] --> B{Phase Detected?}
    B -->|Phase 1| C[Monitor & Analyze]
    B -->|Phase 1+2| D[High Priority Investigation]
    B -->|Phase 1+2+3| E[CRITICAL: System Compromised]
    E --> F[Isolate Network Segment]
    F --> G[Preserve Evidence]
    G --> H[Malware Analysis]
    H --> I[System Recovery]
```

### **Key Investigation Points:**

1. **Traffic Analysis:**
   - Source IP reputation check
   - Lateral movement indicators
   - Data exfiltration patterns

2. **System Assessment:**
   - Memory dumps for IOCs
   - Registry changes
   - File system modifications
   - Network connections

3. **Containment:**
   - Network segmentation
   - Account lockdown
   - Service isolation

4. **Recovery:**
   - Patch deployment
   - System rebuilding
   - Security hardening

---

## 🔧 Technical Implementation Details

### **Flowbit Management:**

```
Session Tracking:
├── eternalblue.session.active (Set in Phase 1)
├── eternalblue.phase1.detected (Initial exploitation)
├── eternalblue.phase2.overflow.detected (Buffer overflow)
├── eternalblue.phase3.success.detected (Compromise confirmed)
└── eternalblue.medical.target (Medical device targeted)
```

### **Threshold Configuration:**

| Rule Type | Threshold | Tracking | Duration |
|-----------|-----------|----------|----------|
| Phase 1 | 1 event | by_src | 120 seconds |
| Phase 2 | 1 event | by_src | 120 seconds |
| Phase 3 | 1 event | by_dst | 300 seconds |
| Correlation | 1 event | by_src | 600 seconds |

---

## 📊 Attack Timeline Example

```
Timeline of Detected EternalBlue Attack:
00:00:00 - Rule 9000001: Initial Trans2 exploitation attempt
00:00:01 - Rule 9000002: SMB3 exploit pattern detected
00:00:02 - Rule 9000003: Buffer overflow in progress (AAAA pattern)
00:00:02 - Rule 9000023: SMB3 exploitation chain correlation
00:00:10 - Rule 9000008: Server accepting connections (compromise confirmed)
00:00:15 - Rule 9000020: Complete attack chain detected (CRITICAL)
```

---

## 🎯 Summary

These EternalBlue detection rules provide comprehensive coverage of the attack lifecycle through:

1. **Multi-Phase Detection**: Progressive rule triggering from initial attempt to confirmed compromise
2. **Smart Correlation**: Flowbit-based session tracking prevents false positives
3. **Medical Environment Awareness**: Specialized rules for healthcare infrastructure
4. **Actionable Intelligence**: Clear severity levels and response guidelines

The detection strategy ensures that SOC analysts receive timely, accurate alerts with sufficient context to respond effectively to EternalBlue attacks against critical medical infrastructure.

---

**🔐 Security Contact:** SOC Team - soc@hospital.local  
**📅 Last Updated:** August 3, 2025  
**📝 Version:** 2.0  
**🔄 Review Cycle:** Monthly
