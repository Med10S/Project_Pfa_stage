{
    "nodes": [
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "eternalblue-alert",
                "options": {}
            },
            "id": "e2f931a2-dfb7-4aae-b98e-4d7629650abc",
            "name": "EternalBlue Webhook",
            "type": "n8n-nodes-base.webhook",
            "typeVersion": 1,
            "position": [
                384,
                -816
            ],
            "webhookId": "eternalblue-alert"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 1
                    },
                    "conditions": [
                        {
                            "id": "phase-router",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "=PHASE_1_INITIAL",
                            "operator": {
                                "type": "string",
                                "operation": "equals"
                            }
                        },
                        {
                            "id": "22a6121f-0872-43ab-bcc0-d69f646c2cca",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_1_SMB3",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "99a28db7-10b1-4b51-a71d-63fa818c397a",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_1_LEGACY_TRANS2",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "2859e376-3c7a-46b9-8579-279633425096",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_1_LEGACY_SMB3",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        }
                    ],
                    "combinator": "or"
                },
                "options": {}
            },
            "id": "f7323e80-21b7-421c-9a94-f9f165090519",
            "name": "Phase 1 Detection",
            "type": "n8n-nodes-base.if",
            "typeVersion": 2,
            "position": [
                720,
                -1296
            ]
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 1
                    },
                    "conditions": [
                        {
                            "id": "phase-2-check",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_2_OVERFLOW",
                            "operator": {
                                "type": "string",
                                "operation": "equals"
                            }
                        },
                        {
                            "id": "2a06e40e-fb35-41bb-97ee-21bcab3737b8",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_2_GROOMING",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "05d30a93-54d0-4aa8-b240-cd6dce4e9037",
                            "leftValue": "={{ $json.body.attack_analysis.phase}}",
                            "rightValue": "PHASE_2_OVERSIZED",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        }
                    ],
                    "combinator": "or"
                },
                "options": {}
            },
            "id": "ba95193f-0dbb-458f-abe0-cdc486b899f7",
            "name": "Phase 2 Detection",
            "type": "n8n-nodes-base.if",
            "typeVersion": 2,
            "position": [
                768,
                -816
            ]
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 1
                    },
                    "conditions": [
                        {
                            "id": "phase-3-check",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_3_SUCCESS",
                            "operator": {
                                "type": "string",
                                "operation": "equals"
                            }
                        },
                        {
                            "id": "dd53a597-fd0a-4b80-a460-9b1faa42388b",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_3_RESPONSE",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "58ae5b4f-dffc-47f2-aa04-9508e3b81431",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "PHASE_3_PAYLOAD",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "3916125a-15a8-4d06-a4bb-da7e320ab728",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "POST_EXPLOIT",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "6989b19d-41eb-4e58-9209-eebe7354ed06",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "CORRELATION_FULL_CHAIN",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        },
                        {
                            "id": "d046d307-0382-42c6-a323-f76e1acfb319",
                            "leftValue": "={{ $json.body.attack_analysis.phase }}",
                            "rightValue": "MEDICAL_TARGET",
                            "operator": {
                                "type": "string",
                                "operation": "equals",
                                "name": "filter.operator.equals"
                            }
                        }
                    ],
                    "combinator": "or"
                },
                "options": {}
            },
            "id": "9491bc9a-c3bd-44c4-b1a8-a8999b7425e0",
            "name": "Phase 3/Critical Detection",
            "type": "n8n-nodes-base.if",
            "typeVersion": 2,
            "position": [
                768,
                -384
            ]
        },
        {
            "parameters": {
                "title": "EternalBlue Phase 1 - Initial Detection",
                "description": "=**Initial EternalBlue exploitation attempt detected**\n\n**Attack Details:**\n- Source IP: {{ $json.body.source_ip }}\n- Target IP: {{ $json.body.destination_ip }}\n- Phase: {{ $json.body.attack_analysis.phase }}\n- Attack Status: {{ $json.body.attack_analysis.attack_status }}\n- Detection Time: {{ $json.body.processing_timestamp }}\n\n**Signature:** {{ $json.body.signature }}\n\n**Recommended Actions:**\n1. Monitor source IP for escalation\n2. Review target system logs\n3. Verify SMB service configurations\n4. Check for subsequent attack phases\n\n**Priority:** {{ $json.body.attack_analysis.priority_level }} - Enhanced monitoring required",
                "date": "={{ $json.body.timestamp }}",
                "tags": "=eternalblue,phase1,smb,exploitation-attempt",
                "type": "eternalblue",
                "source": "=suricata",
                "sourceRef": "={{ $json.body.timestamp }}",
                "additionalFields": {}
            },
            "id": "293ce8c0-6b44-4d2b-9465-29dfb2d636a9",
            "name": "TheHive - Phase 1 Alert",
            "type": "n8n-nodes-base.theHive",
            "typeVersion": 1,
            "position": [
                992,
                -1472
            ],
            "credentials": {
                "theHiveApi": {
                    "id": "gkwz9WkO0XfDdoRG",
                    "name": "The Hive account"
                }
            }
        },
        {
            "parameters": {
                "title": "EternalBlue Phase 2 - Active Exploitation",
                "description": "=**🚨 ACTIVE ETERNALBLUE EXPLOITATION IN PROGRESS 🚨**\n\n**CRITICAL: Buffer overflow exploitation detected**\n\n**Attack Details:**\n- Source IP: {{ $json.body.source_ip }}\n- Target IP: {{ $json.body.destination_ip }}\n- Phase: {{ $json.body.attack_analysis.phase }}\n- Attack Status: {{ $json.body.attack_analysis.attack_status }}\n- Detection Time: {{ $json.body.timestamp }}\n\n**Technical Details:**\n- Signature: {{ $json.body.signature }}\n- PCAP File: {{ $json.body.pcap_file.filename }}\n- Packet Count: {{ $json.body.pcap_file.packet_count }}\n- File Size: {{ $json.body.pcap_file.size_bytes }} bytes\n\n**IMMEDIATE ACTIONS REQUIRED:**\n1. ⚠️ ISOLATE TARGET SYSTEM IMMEDIATELY\n2. 🔍 Analyze captured network traffic\n3. 📞 Notify security team leadership\n4. 🛡️ Block attacking IP at firewall\n5. 💾 Preserve system memory dump\n6. 📋 Document all actions taken\n\n**Priority:** {{ $json.body.attack_analysis.priority_level }} - Immediate investigation required\n\n**Medical Environment Impact:**\n- Potential disruption to medical devices\n- Patient data confidentiality at risk\n- Operational continuity threatened",
                "severity": 3,
                "date": "={{ $json.body.timestamp }}",
                "tags": "eternalblue,phase2,active-exploitation,critical,medical-impact",
                "type": "eternalblue",
                "source": "=suricata",
                "sourceRef": "={{ $json.body.processing_timestamp }}",
                "additionalFields": {}
            },
            "id": "fbc21905-0aa0-40ca-b393-17d05916cd41",
            "name": "TheHive - Phase 2 Case",
            "type": "n8n-nodes-base.theHive",
            "typeVersion": 1,
            "position": [
                992,
                -944
            ],
            "credentials": {
                "theHiveApi": {
                    "id": "gkwz9WkO0XfDdoRG",
                    "name": "The Hive account"
                }
            }
        },
        {
            "parameters": {
                "title": "🚨 CRITICAL: EternalBlue Successful Compromise",
                "description": "=**🔴 CONFIRMED SUCCESSFUL ETERNALBLUE EXPLOITATION 🔴**\n\n**SYSTEM COMPROMISE CONFIRMED - IMMEDIATE INCIDENT RESPONSE REQUIRED**\n\n**Attack Details:**\n- Source IP: {{ $json.body.source_ip }}\n- Compromised Target: {{ $json.body.destination_ip }}\n- Phase: {{ $json.body.attack_analysis.phase }}\n- Attack Status: {{ $json.body.attack_analysis.attack_status }}\n- Compromise Time: {{ $json.body.timestamp }}\n\n**Evidence:**\n- PCAP File: {{ $json.body.pcap_file.filename }}\n- Packet Analysis: {{ $json.body.pcap_file.packet_count }} packets captured\n- File Size: {{ $json.body.pcap_file.size_bytes }} bytes\n- SHA256: {{ $json.body.pcap_file.sha256 }}\n\n**🆘 CRITICAL INCIDENT RESPONSE ACTIONS:**\n\n**IMMEDIATE (0-15 minutes):**\n1. 🚨 ACTIVATE INCIDENT RESPONSE TEAM\n2. 🔌 ISOLATE COMPROMISED SYSTEM FROM NETWORK\n3. 📞 NOTIFY CISO AND MEDICAL DIRECTOR\n4. 🛡️ BLOCK ATTACKER IP ACROSS ALL SYSTEMS\n5. 📋 PRESERVE ALL LOGS AND EVIDENCE\n\n**SHORT TERM (15-60 minutes):**\n6. 🔍 SCAN ALL SYSTEMS FOR INDICATORS OF COMPROMISE\n7. 💾 ACQUIRE MEMORY AND DISK IMAGES\n8. 🏥 ASSESS IMPACT ON MEDICAL OPERATIONS\n9. 👥 BRIEF CLINICAL STAFF ON POTENTIAL DISRUPTIONS\n10. 📧 PREPARE BREACH NOTIFICATION DOCUMENTATION\n\n**MEDIUM TERM (1-24 hours):**\n11. 🔎 FULL FORENSIC ANALYSIS\n12. 🏥 ACTIVATE BACKUP MEDICAL SYSTEMS\n13. 📜 REGULATORY COMPLIANCE NOTIFICATIONS\n14. 🛠️ SYSTEM REBUILD AND HARDENING\n\n**MEDICAL ENVIRONMENT SPECIFIC RISKS:**\n- 🏥 Medical device integrity compromised\n- 👤 Patient data confidentiality breach\n- ⚕️ Clinical workflow disruption\n- 📊 Medical records access impacted\n- 🚨 Potential life safety implications\n\n**Priority:** CRITICAL - Major incident declared\n\n**Estimated Recovery Time:** 24-72 hours\n**Patient Safety Impact:** HIGH RISK - Monitor closely**",
                "severity": 3,
                "date": "2025-08-04T00:00:00",
                "tags": "eternalblue,phase3,successful-compromise,critical-incident,medical-emergency,patient-safety",
                "type": "={{ $json.body.attack_analysis.phase }}",
                "source": "suricata",
                "sourceRef": "={{ $json.body.timestamp }}",
                "additionalFields": {}
            },
            "id": "fbc008c6-5c40-4b7a-9434-1ee6f51369b9",
            "name": "TheHive - Critical Incident",
            "type": "n8n-nodes-base.theHive",
            "typeVersion": 1,
            "position": [
                1024,
                -528
            ],
            "credentials": {
                "theHiveApi": {
                    "id": "gkwz9WkO0XfDdoRG",
                    "name": "The Hive account"
                }
            }
        },
        {
            "parameters": {
                "chatId": "@SOC_Team",
                "text": "=🚨{{ $('TheHive - Phase 2 Case').item.json.title }}  🚨\n\n📍 Target: {{ $('Merge3').item.json.body.destination_ip }}\n🎯 Attacker: {{ $('Merge3').item.json.body.source_ip }}\n⚠️ Phase: {{ $('Merge3').item.json.body.attack_analysis.phase }}\n🕐 Time: {{ $('Merge3').item.json.body.timestamp }}\n\n🚨 IMMEDIATE ACTIONS:\n• System isolation initiated\n• Incident response activated\n• Medical staff being notified\n\n📧 Full details sent via email\n📋 TheHive case created\n\n#EternalBlue #CriticalIncident #MedicalSecurity",
                "replyMarkup": "inlineKeyboard",
                "inlineKeyboard": {
                    "rows": [
                        {
                            "row": {
                                "buttons": [
                                    {
                                        "text": "👁️ See the Alert",
                                        "additionalFields": {
                                            "url": "=http://thehive.sbihi.soar.ma/alerts/{{ $json.request_info.alert_id }}/details"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "additionalFields": {}
            },
            "id": "c341f557-beec-4f72-a913-c6468725c8ba",
            "name": "Telegram Medical Alert",
            "type": "n8n-nodes-base.telegram",
            "typeVersion": 1.1,
            "position": [
                2624,
                -864
            ],
            "webhookId": "3376df6d-e30c-4813-b05c-d592f07c0250",
            "credentials": {
                "telegramApi": {
                    "id": "LOwniAO8FUxNCyIK",
                    "name": "Telegram account"
                }
            }
        },
        {
            "parameters": {
                "mode": "combine",
                "combineBy": "combineAll",
                "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
                1248,
                -848
            ],
            "id": "832665de-57db-42ea-9d04-f65f3bba11b8",
            "name": "Merge3"
        },
        {
            "parameters": {
                "jsCode": "/**\n * n8n Code Node: TheHive Alert Report Generator\n * Generates beautiful HTML report for EternalBlue attack with file attachment\n * Created: 2025-08-03 21:57:19 UTC by SB\n */\n\n// Get data from previous nodes\nconst uploadResult = $('Updaod_PCAP_Alert').all()[0].json;\nconst alertData = $('Pcap_File_existe').all()[0].json;\n\n// Parse the response data\nconst attachmentInfo = JSON.parse(uploadResult.response_data);\nconst attachment = attachmentInfo.attachments[0];\n\n// Current timestamp\nconst reportTimestamp = $input.first().json.file_info.uploaded_at;\nconst reportUser = \"SB\";\n\nconsole.log(`📊 Generating HTML report for alert ${alertData._id} by ${reportUser} at ${reportTimestamp}`);\n\n// Generate the HTML report\nconst htmlReport = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>TheHive Alert Report - ${alertData._id}</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        .security-button {\n            position: relative;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            padding: 18px 35px;\n            font-size: 1.1em;\n            font-weight: 600;\n            text-decoration: none;\n            color: white;\n            background: linear-gradient(45deg, #ff6b6b, #ee5a24, #e55039);\n            border: none;\n            border-radius: 50px;\n            box-shadow: \n                0 8px 25px rgba(238, 90, 36, 0.3),\n                0 4px 15px rgba(0, 0, 0, 0.2),\n                inset 0 1px 0 rgba(255, 255, 255, 0.2);\n            cursor: pointer;\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n            overflow: hidden;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            backdrop-filter: blur(10px);\n        }\n\n        .security-button::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n            transition: left 0.5s ease;\n        }\n\n        .security-button:hover::before {\n            left: 100%;\n        }\n\n        .security-button:hover {\n            transform: translateY(-3px) scale(1.05);\n            box-shadow: \n                0 15px 35px rgba(238, 90, 36, 0.4),\n                0 8px 25px rgba(0, 0, 0, 0.3),\n                inset 0 1px 0 rgba(255, 255, 255, 0.3);\n        }\n\n        .security-button:active {\n            transform: translateY(-1px) scale(1.02);\n            box-shadow: \n                0 5px 15px rgba(238, 90, 36, 0.4),\n                0 2px 8px rgba(0, 0, 0, 0.3);\n        }\n\n        .button-icon {\n            margin-right: 12px;\n            font-size: 1.3em;\n            animation: pulse 2s infinite;\n        }\n\n        .button-text {\n            position: relative;\n            z-index: 2;\n        }\n\n        .button-timestamp {\n            font-size: 0.8em;\n            margin-left: 10px;\n            opacity: 0.9;\n            font-weight: 400;\n        }\n\n        @keyframes pulse {\n            0%, 100% { transform: scale(1); }\n            50% { transform: scale(1.1); }\n        }\n\n        .container {\n            text-align: center;\n            background: rgba(255, 255, 255, 0.1);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 40px;\n            border: 1px solid rgba(255, 255, 255, 0.2);\n        }\n\n        .title {\n            color: white;\n            font-size: 2em;\n            margin-bottom: 20px;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n        }\n\n        .subtitle {\n            color: rgba(255, 255, 255, 0.8);\n            margin-bottom: 30px;\n            font-size: 1.1em;\n        }\n\n        .user-info {\n            color: rgba(255, 255, 255, 0.7);\n            font-size: 0.9em;\n            margin-top: 20px;\n        }\n        \n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 15px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n            color: white;\n            padding: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            font-size: 2.5em;\n            margin-bottom: 10px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .header .subtitle {\n            font-size: 1.2em;\n            opacity: 0.9;\n        }\n        \n        .status-banner {\n            background: ${uploadResult.success ? '#10ac84' : '#ee5a24'};\n            color: white;\n            text-align: center;\n            padding: 15px;\n            font-weight: bold;\n            font-size: 1.1em;\n        }\n        \n        .content {\n            padding: 40px;\n        }\n        \n        .section {\n            margin-bottom: 40px;\n            background: #f8f9fa;\n            border-radius: 10px;\n            padding: 25px;\n            border-left: 5px solid #667eea;\n        }\n        \n        .section h2 {\n            color: #2c3e50;\n            margin-bottom: 20px;\n            font-size: 1.8em;\n            border-bottom: 2px solid #ecf0f1;\n            padding-bottom: 10px;\n        }\n        \n        .info-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .info-card {\n            background: white;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n            border: 1px solid #e0e0e0;\n        }\n        \n        .info-card h3 {\n            color: #34495e;\n            margin-bottom: 15px;\n            font-size: 1.3em;\n            display: flex;\n            align-items: center;\n        }\n        \n        .info-card .emoji {\n            margin-right: 10px;\n            font-size: 1.5em;\n        }\n        \n        .info-item {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 10px;\n            padding: 8px 0;\n            border-bottom: 1px solid #ecf0f1;\n        }\n        \n        .info-item:last-child {\n            border-bottom: none;\n        }\n        \n        .info-label {\n            font-weight: 600;\n            color: #555;\n        }\n        \n        .info-value {\n            color: #2c3e50;\n            word-break: break-all;\n        }\n        \n        .success {\n            color: #27ae60;\n            font-weight: bold;\n        }\n        \n        .warning {\n            color: #f39c12;\n            font-weight: bold;\n        }\n        \n        .error {\n            color: #e74c3c;\n            font-weight: bold;\n        }\n        \n        .critical {\n            background: #fff5f5;\n            border: 2px solid #fc8181;\n            border-radius: 8px;\n            padding: 15px;\n            margin: 15px 0;\n        }\n        \n        .hash-list {\n            background: #f7fafc;\n            padding: 15px;\n            border-radius: 5px;\n            margin: 10px 0;\n            font-family: 'Courier New', monospace;\n            font-size: 0.9em;\n        }\n        \n        .tag {\n            display: inline-block;\n            background: #667eea;\n            color: white;\n            padding: 5px 12px;\n            border-radius: 20px;\n            margin: 3px;\n            font-size: 0.85em;\n        }\n        \n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 20px;\n            font-size: 0.9em;\n        }\n        \n        .timeline {\n            position: relative;\n            padding-left: 30px;\n        }\n        \n        .timeline::before {\n            content: '';\n            position: absolute;\n            left: 15px;\n            top: 0;\n            bottom: 0;\n            width: 2px;\n            background: #667eea;\n        }\n        \n        .timeline-item {\n            position: relative;\n            margin-bottom: 20px;\n            background: white;\n            padding: 15px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .timeline-item::before {\n            content: '';\n            position: absolute;\n            left: -22px;\n            top: 20px;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background: #667eea;\n            border: 3px solid white;\n        }\n        \n        @media (max-width: 768px) {\n            .info-grid {\n                grid-template-columns: 1fr;\n            }\n            \n            .header h1 {\n                font-size: 2em;\n            }\n            \n            .content {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <h1>🛡️ TheHive Security Alert Report</h1>\n            <div class=\"subtitle\">EternalBlue Attack Analysis & File Processing</div>\n        </div>\n        \n        <!-- Status Banner -->\n        <div class=\"status-banner\">\n            ${uploadResult.success ? '✅ File Successfully Attached to Alert' : '❌ File Attachment Failed'}\n        </div>\n        \n        <!-- Content -->\n        <div class=\"content\">\n            <!-- Alert Overview -->\n            <div class=\"section\">\n                <h2>🚨 Alert Overview</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📋</span>Alert Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Alert ID:</span>\n                            <span class=\"info-value\">${alertData._id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Title:</span>\n                            <span class=\"info-value\">${alertData.title}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Type:</span>\n                            <span class=\"info-value\">${alertData.type}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Status:</span>\n                            <span class=\"info-value warning\">${alertData.status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Severity:</span>\n                            <span class=\"info-value error\">Level ${alertData.severity}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created:</span>\n                            <span class=\"info-value\">${new Date(alertData.createdAt).toLocaleString()}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">🎯</span>Attack Details</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source IP:</span>\n                            <span class=\"info-value error\">${alertData.body.source_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Target IP:</span>\n                            <span class=\"info-value\">${alertData.body.destination_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Phase:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.phase}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Status:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.attack_status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Priority:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.priority_level}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection:</span>\n                            <span class=\"info-value\">${new Date(alertData.body.timestamp).toLocaleString()}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"critical\">\n                    <h3>🚨 Critical Information</h3>\n                    <p><strong>Signature:</strong> ${alertData.body.signature}</p>\n                    <p><strong>SMB Packets:</strong> ${alertData.body.advanced_analysis.smb_packet_count}</p>\n                    <p><strong>Large Packets:</strong> ${alertData.body.advanced_analysis.large_packet_count}</p>\n                </div>\n                \n                <div style=\"margin-top: 15px;\">\n                    <strong>Tags:</strong>\n                    ${alertData.tags.map(tag => `<span class=\"tag\">${tag}</span>`).join('')}\n                </div>\n            </div>\n            \n            <!-- File Processing Results -->\n            <div class=\"section\">\n                <h2>📎 File Attachment Results</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📄</span>File Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Filename:</span>\n                            <span class=\"info-value\">${uploadResult.file_info.name}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Size:</span>\n                            <span class=\"info-value\">${uploadResult.file_info.size.toLocaleString()} bytes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Upload Status:</span>\n                            <span class=\"info-value ${uploadResult.success ? 'success' : 'error'}\">\n                                ${uploadResult.success ? '✅ SUCCESS' : '❌ FAILED'}\n                            </span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">HTTP Status:</span>\n                            <span class=\"info-value\">${uploadResult.status_code}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed By:</span>\n                            <span class=\"info-value\">${uploadResult.processed_by}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed At:</span>\n                            <span class=\"info-value\">${uploadResult.processed_at}</span>\n                        </div>\n                    </div>\n                    \n                    ${uploadResult.success ? `\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">🔗</span>TheHive Attachment</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Attachment ID:</span>\n                            <span class=\"info-value\">${attachment._id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Content Type:</span>\n                            <span class=\"info-value\">${attachment.contentType}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created By:</span>\n                            <span class=\"info-value\">${attachment._createdBy}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created At:</span>\n                            <span class=\"info-value\">${new Date(attachment._createdAt).toLocaleString()}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">API Path:</span>\n                            <span class=\"info-value\">${attachment.path}</span>\n                        </div>\n                    </div>\n                    ` : ''}\n                </div>\n                \n                ${uploadResult.success ? `\n                <div class=\"hash-list\">\n                    <strong>File Hashes:</strong><br>\n                    <strong>SHA256:</strong> ${attachment.hashes[0]}<br>\n                    <strong>SHA1:</strong> ${attachment.hashes[1]}<br>\n                    <strong>MD5:</strong> ${attachment.hashes[2]}\n                </div>\n                ` : ''}\n            </div>\n            \n            <!-- Processing Timeline -->\n            <div class=\"section\">\n                <h2>⏱️ Processing Timeline</h2>\n                <div class=\"timeline\">\n                    <div class=\"timeline-item\">\n                        <strong>Attack Detection</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.body.timestamp).toLocaleString()}</span><br>\n                        EternalBlue Phase 2 attack detected by Suricata\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Alert Creation</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.createdAt).toLocaleString()}</span><br>\n                        Alert ${alertData._id} created in TheHive\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>File Processing</strong><br>\n                        <span style=\"color: #666;\">${uploadResult.processed_at}</span><br>\n                        PCAP file processed and attached by ${uploadResult.processed_by}\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Report Generation</strong><br>\n                        <span style=\"color: #666;\">${reportTimestamp}</span><br>\n                        Comprehensive report generated by ${reportUser}\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Technical Details -->\n            <div class=\"section\">\n                <h2>🔧 Technical Details</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📊</span>Request Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Endpoint:</span>\n                            <span class=\"info-value\">${uploadResult.request_info.endpoint}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Body Size:</span>\n                            <span class=\"info-value\">${uploadResult.request_info.body_size.toLocaleString()} bytes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source:</span>\n                            <span class=\"info-value\">${alertData.source}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection Engine:</span>\n                            <span class=\"info-value\">${alertData.body.detection_engine}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📦</span>PCAP Analysis</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Original Path:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.pcap_file.path}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Packet Count:</span>\n                            <span class=\"info-value\">${alertData.body.pcap_file.packet_count}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">File SHA256:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.pcap_file.sha256}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Filter Used:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.attack_analysis.filter_used}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n         <div>\n       \n        <a href=\"https://thehive.sbihi.soar.ma/alerts/${alertData._id}/details\" class=\"security-button\">\n            <span class=\"button-icon\">🚨</span>\n            <span class=\"button-text\">View Alert Report</span>\n            <span class=\"button-timestamp\">22:16</span>\n        </a>\n        \n      \n    </div>\n        \n        <!-- Footer -->\n        <div class=\"footer\">\n            <p>🛡️ Generated by SOAR Platform | User: ${reportUser} | ${reportTimestamp} UTC</p>\n            <p>TheHive Security Operations & Response | Powered by n8n Automation</p>\n        </div>\n    </div>\n    \n</body>\n\n    <style>\n        .ripple {\n            position: absolute;\n            border-radius: 50%;\n            background: rgba(255, 255, 255, 0.3);\n            transform: scale(0);\n            animation: ripple-animation 0.6s linear;\n            pointer-events: none;\n        }\n\n        @keyframes ripple-animation {\n            to {\n                transform: scale(4);\n                opacity: 0;\n            }\n        }\n    </style>\n</html>\n`;\n\nconsole.log(`✅ HTML report generated successfully - ${htmlReport.length} characters`);\n\n// Return the HTML report\nreturn {\n    json: {\n        success: true,\n        report_generated_by: reportUser,\n        report_generated_at: reportTimestamp,\n        alert_id: alertData._id,\n        file_attached: uploadResult.success,\n        reporte: htmlReport,\n        summary: {\n              to: \"soc-team@sbihi.soar.ma\", \n\n            attack_type: alertData.type,\n            source_ip: alertData.body.source_ip,\n            target_ip: alertData.body.destination_ip,\n            phase: alertData.body.attack_analysis.phase,\n            file_name: uploadResult.file_info.name,\n            file_size: uploadResult.file_info.size,\n            attachment_id: uploadResult.success ? JSON.parse(uploadResult.response_data).attachments[0]._id : null\n        }\n    },\n    \n};"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                2208,
                -1072
            ],
            "id": "e6a6a19f-0e32-42d9-9518-0c047f52478e",
            "name": "HTML report Generator"
        },
        {
            "parameters": {
                "mode": "runOnceForEachItem",
                "jsCode": "/**\n * n8n Code Node: TheHive Alert File Attachment\n * Fixed version - 2025-08-03 21:06:26 by imi-SB\n */\n\n// Import modules (available in n8n)\nconst { URL } = require('url');\nconst https = require('https');\nconst http = require('http');\n\n// Configuration\nconst API_KEY = 'HSTx8PnJZNVvHwYFGs+564VD7pfqsRAj';\nconst THEHIVE_URL = 'https://thehive.sbihi.soar.ma';\nconst ALERT_ID = $json._id;\nconst FILE_NAME = $input.item.binary.data.fileName || 'attachment.pcap';\n\nconsole.log(`🚀 Starting file upload - User: imi-SB | Time: 2025-08-03 21:06:26`);\nconsole.log(`📝 Alert ID: ${ALERT_ID} | File: ${FILE_NAME}`);\n\nasync function attachFile() {\n    return new Promise((resolve, reject) => {\n        const endpoint = `/api/v1/alert/${ALERT_ID}/attachments`;\n        const url = new URL(endpoint, THEHIVE_URL);\n        \n        console.log(`🌐 URL: ${url.href}`);\n\n        // Get binary data from n8n input\n        const binaryData = $input.item.binary.data.data;\n        const file_buffer = Buffer.from(binaryData, 'base64');\n        \n        console.log(`📤 Preparing ${FILE_NAME} (${file_buffer.length} bytes) for TheHive alert ${ALERT_ID}`);\n\n        // Build multipart body\n        const boundary = \"----WebKitFormBoundarybwyeFEHh4C1CJwfR\";\n        \n        const body_parts = [\n            `--${boundary}`,\n            `Content-Disposition: form-data; name=\"attachments\"; filename=\"${FILE_NAME}\"`,\n            `Content-Type: application/octet-stream`,\n            `` // Empty line before binary content\n        ];\n\n        const header_text = Buffer.from(body_parts.join('\\r\\n') + '\\r\\n', 'utf-8');\n        console.log(`📋 Header: ${header_text.length} bytes`);\n\n        const footer_parts = [\n            `\\r\\n--${boundary}\\r\\n`,\n            `Content-Disposition: form-data; name=\"canRename\"\\r\\n\\r\\ntrue\\r\\n--${boundary}--\\r\\n`\n        ];\n        const footer_text = Buffer.from(footer_parts.join(''), 'utf-8');\n        console.log(`📋 Footer: ${footer_text.length} bytes`);\n\n        // Combine all parts\n        const multipart_body = Buffer.concat([header_text, file_buffer, footer_text]);\n        console.log(`📦 Total body size: ${multipart_body.length} bytes`);\n\n        // Headers\n        const headers = {\n            'Authorization': `Bearer ${API_KEY}`,\n            'Accept': 'application/json, text/plain, */*',\n            'Accept-Language': 'fr-FR,fr;q=0.9',\n            'Content-Type': `multipart/form-data; boundary=${boundary}`,\n            'Content-Length': multipart_body.length,\n            'Origin': 'https://thehive.sbihi.soar.ma',\n            'Referer': `https://thehive.sbihi.soar.ma/alerts/${ALERT_ID}/attachments`,\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        };\n\n        // Request options\n        const requestModule = url.protocol === 'https:' ? https : http;\n        const options = {\n            hostname: url.hostname,\n            port: url.port || (url.protocol === 'https:' ? 443 : 80),\n            path: url.pathname,\n            method: 'POST',\n            headers: headers,\n            // Add timeout and SSL options\n            timeout: 30000,\n            rejectUnauthorized: false // For self-signed certificates\n        };\n\n        console.log(`🔄 Making POST request to ${url.pathname}`);\n\n        // Make the request\n        const req = requestModule.request(options, (res) => {\n            let response_data = '';\n            \n            console.log(`📊 Response Status: ${res.statusCode}`);\n            console.log(`📋 Response Headers:`, res.headers);\n\n            res.on('data', (chunk) => {\n                response_data += chunk;\n            });\n\n            res.on('end', () => {\n                console.log(`📋 Response Body: ${response_data}`);\n\n                const result = {\n                    success: res.statusCode === 200 || res.statusCode === 201,\n                    status_code: res.statusCode,\n                    response: response_data,\n                    file_info: {\n                        name: FILE_NAME,\n                        size: file_buffer.length,\n                        uploaded_by: \"imi-SB\",\n                        uploaded_at: \"2025-08-03 21:06:26\"\n                    },\n                    request_info: {\n                        alert_id: ALERT_ID,\n                        endpoint: endpoint,\n                        body_size: multipart_body.length\n                    }\n                };\n\n                if (result.success) {\n                    console.log('✅ File attached successfully!');\n                } else {\n                    console.log('❌ Attachment failed!');\n                }\n\n                resolve(result);\n            });\n        });\n\n        req.on('error', (error) => {\n            console.error('❌ Request error:', error);\n            reject({\n                success: false,\n                error: error.message,\n                file_info: {\n                    name: FILE_NAME,\n                    size: file_buffer.length\n                }\n            });\n        });\n\n        req.on('timeout', () => {\n            console.error('❌ Request timeout');\n            req.destroy();\n            reject({\n                success: false,\n                error: 'Request timeout',\n                file_info: {\n                    name: FILE_NAME,\n                    size: file_buffer.length\n                }\n            });\n        });\n\n        // Write the body and end the request\n        req.write(multipart_body);\n        req.end();\n    });\n}\n\n// Execute the upload and return results\ntry {\n    const result = await attachFile();\n    \n    return {\n        json: {\n            success: result.success,\n            status_code: result.status_code,\n            response_data: result.response,\n            file_info: result.file_info,\n            request_info: result.request_info,\n            processed_by: \"SB\",\n            processed_at: \"2025-08-03 21:06:26\"\n        }\n    };\n    \n} catch (error) {\n    console.error('💥 Upload failed:', error);\n    \n    return {\n        json: {\n            success: false,\n            error: error.error || error.message,\n            file_info: error.file_info || {\n                name: FILE_NAME,\n                size: 0\n            },\n            processed_by: \"SB\",\n            processed_at: \"2025-08-03 21:06:26\"\n        }\n    };\n}"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                1904,
                -976
            ],
            "id": "41284117-5928-44b9-862c-d2dbc84cc852",
            "name": "Updaod_PCAP_Alert"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 2
                    },
                    "conditions": [
                        {
                            "id": "2cca3f21-31f8-4ec6-a0ff-238f10f236f4",
                            "leftValue": "={{ $json.body.pcap_file.path }}",
                            "rightValue": "",
                            "operator": {
                                "type": "string",
                                "operation": "notEmpty",
                                "singleValue": true
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
                1440,
                -848
            ],
            "id": "89365a68-6ac2-4f46-8bf3-dd318bdf982e",
            "name": "Pcap_File_existe"
        },
        {
            "parameters": {
                "resource": "file",
                "operation": "download",
                "path": "={{ $json.body.pcap_file.path }}",
                "options": {
                    "fileName": "={{ $json.body.attack_analysis.phase }}_{{ $json.body.attack_analysis.attack_status }}.pcap"
                }
            },
            "type": "n8n-nodes-base.ssh",
            "typeVersion": 1,
            "position": [
                1664,
                -976
            ],
            "id": "00dbf3cc-edfb-494a-976f-7559752c778b",
            "name": "Download_Pcap_file",
            "credentials": {
                "sshPassword": {
                    "id": "DFeXLAheLkCzirwA",
                    "name": "SSH Password account"
                }
            }
        },
        {
            "parameters": {
                "fromEmail": "admin@sbihi.soar.ma",
                "toEmail": "={{ $json.summary.to }}",
                "subject": "=🚨 CRITICAL: EternalBlue Phase 2 Active Exploitation - Alert {{ $json.alert_id }} ",
                "html": "={{ $json.reporte }}",
                "options": {}
            },
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2.1,
            "position": [
                2624,
                -1072
            ],
            "id": "ff690de8-7762-404d-8339-3183959eae6c",
            "name": "Send email2",
            "webhookId": "a8fa8078-4f8a-499c-b12b-ae2b191004a8",
            "credentials": {
                "smtp": {
                    "id": "zCBfpjwyWbps8Afk",
                    "name": "SMTP account"
                }
            }
        },
        {
            "parameters": {
                "mode": "runOnceForEachItem",
                "jsCode": "/**\n * n8n Code Node: TheHive Alert File Attachment\n * Fixed version - 2025-08-03 21:06:26 by imi-SB\n */\n\n// Import modules (available in n8n)\nconst { URL } = require('url');\nconst https = require('https');\nconst http = require('http');\n\n// Configuration\nconst API_KEY = 'HSTx8PnJZNVvHwYFGs+564VD7pfqsRAj';\nconst THEHIVE_URL = 'https://thehive.sbihi.soar.ma';\nconst ALERT_ID = $json._id;\nconst FILE_NAME = $input.item.binary.data.fileName || 'attachment.pcap';\n\nconsole.log(`🚀 Starting file upload - User: imi-SB | Time: 2025-08-03 21:06:26`);\nconsole.log(`📝 Alert ID: ${ALERT_ID} | File: ${FILE_NAME}`);\n\nasync function attachFile() {\n    return new Promise((resolve, reject) => {\n        const endpoint = `/api/v1/alert/${ALERT_ID}/attachments`;\n        const url = new URL(endpoint, THEHIVE_URL);\n        \n        console.log(`🌐 URL: ${url.href}`);\n\n        // Get binary data from n8n input\n        const binaryData = $input.item.binary.data.data;\n        const file_buffer = Buffer.from(binaryData, 'base64');\n        \n        console.log(`📤 Preparing ${FILE_NAME} (${file_buffer.length} bytes) for TheHive alert ${ALERT_ID}`);\n\n        // Build multipart body\n        const boundary = \"----WebKitFormBoundarybwyeFEHh4C1CJwfR\";\n        \n        const body_parts = [\n            `--${boundary}`,\n            `Content-Disposition: form-data; name=\"attachments\"; filename=\"${FILE_NAME}\"`,\n            `Content-Type: application/octet-stream`,\n            `` // Empty line before binary content\n        ];\n\n        const header_text = Buffer.from(body_parts.join('\\r\\n') + '\\r\\n', 'utf-8');\n        console.log(`📋 Header: ${header_text.length} bytes`);\n\n        const footer_parts = [\n            `\\r\\n--${boundary}\\r\\n`,\n            `Content-Disposition: form-data; name=\"canRename\"\\r\\n\\r\\ntrue\\r\\n--${boundary}--\\r\\n`\n        ];\n        const footer_text = Buffer.from(footer_parts.join(''), 'utf-8');\n        console.log(`📋 Footer: ${footer_text.length} bytes`);\n\n        // Combine all parts\n        const multipart_body = Buffer.concat([header_text, file_buffer, footer_text]);\n        console.log(`📦 Total body size: ${multipart_body.length} bytes`);\n\n        // Headers\n        const headers = {\n            'Authorization': `Bearer ${API_KEY}`,\n            'Accept': 'application/json, text/plain, */*',\n            'Accept-Language': 'fr-FR,fr;q=0.9',\n            'Content-Type': `multipart/form-data; boundary=${boundary}`,\n            'Content-Length': multipart_body.length,\n            'Origin': 'https://thehive.sbihi.soar.ma',\n            'Referer': `https://thehive.sbihi.soar.ma/alerts/${ALERT_ID}/attachments`,\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        };\n\n        // Request options\n        const requestModule = url.protocol === 'https:' ? https : http;\n        const options = {\n            hostname: url.hostname,\n            port: url.port || (url.protocol === 'https:' ? 443 : 80),\n            path: url.pathname,\n            method: 'POST',\n            headers: headers,\n            // Add timeout and SSL options\n            timeout: 30000,\n            rejectUnauthorized: false // For self-signed certificates\n        };\n\n        console.log(`🔄 Making POST request to ${url.pathname}`);\n\n        // Make the request\n        const req = requestModule.request(options, (res) => {\n            let response_data = '';\n            \n            console.log(`📊 Response Status: ${res.statusCode}`);\n            console.log(`📋 Response Headers:`, res.headers);\n\n            res.on('data', (chunk) => {\n                response_data += chunk;\n            });\n\n            res.on('end', () => {\n                console.log(`📋 Response Body: ${response_data}`);\n\n                const result = {\n                    success: res.statusCode === 200 || res.statusCode === 201,\n                    status_code: res.statusCode,\n                    response: response_data,\n                    file_info: {\n                        name: FILE_NAME,\n                        size: file_buffer.length,\n                        uploaded_by: \"imi-SB\",\n                        uploaded_at: \"2025-08-03 21:06:26\"\n                    },\n                    request_info: {\n                        alert_id: ALERT_ID,\n                        endpoint: endpoint,\n                        body_size: multipart_body.length\n                    }\n                };\n\n                if (result.success) {\n                    console.log('✅ File attached successfully!');\n                } else {\n                    console.log('❌ Attachment failed!');\n                }\n\n                resolve(result);\n            });\n        });\n\n        req.on('error', (error) => {\n            console.error('❌ Request error:', error);\n            reject({\n                success: false,\n                error: error.message,\n                file_info: {\n                    name: FILE_NAME,\n                    size: file_buffer.length\n                }\n            });\n        });\n\n        req.on('timeout', () => {\n            console.error('❌ Request timeout');\n            req.destroy();\n            reject({\n                success: false,\n                error: 'Request timeout',\n                file_info: {\n                    name: FILE_NAME,\n                    size: file_buffer.length\n                }\n            });\n        });\n\n        // Write the body and end the request\n        req.write(multipart_body);\n        req.end();\n    });\n}\n\n// Execute the upload and return results\ntry {\n    const result = await attachFile();\n    \n    return {\n        json: {\n            success: result.success,\n            status_code: result.status_code,\n            response_data: result.response,\n            file_info: result.file_info,\n            request_info: result.request_info,\n            processed_by: \"SB\",\n            processed_at: \"2025-08-03 21:06:26\"\n        }\n    };\n    \n} catch (error) {\n    console.error('💥 Upload failed:', error);\n    \n    return {\n        json: {\n            success: false,\n            error: error.error || error.message,\n            file_info: error.file_info || {\n                name: FILE_NAME,\n                size: 0\n            },\n            processed_by: \"SB\",\n            processed_at: \"2025-08-03 21:06:26\"\n        }\n    };\n}"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                1952,
                -1456
            ],
            "id": "79390162-1462-48a8-b32d-120fe92449e1",
            "name": "Updaod_PCAP_Alert1"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 2
                    },
                    "conditions": [
                        {
                            "id": "2cca3f21-31f8-4ec6-a0ff-238f10f236f4",
                            "leftValue": "={{ $json.body.pcap_file.path }}",
                            "rightValue": "",
                            "operator": {
                                "type": "string",
                                "operation": "notEmpty",
                                "singleValue": true
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
                1392,
                -1328
            ],
            "id": "59cb03e9-a45c-4ac3-bd8c-f8aa681ae2c2",
            "name": "Pcap_File_existe1"
        },
        {
            "parameters": {
                "resource": "file",
                "operation": "download",
                "path": "={{ $json.body.pcap_file.path }}",
                "options": {
                    "fileName": "={{ $json.body.attack_analysis.phase }}_{{ $json.body.attack_analysis.attack_status }}.pcap"
                }
            },
            "type": "n8n-nodes-base.ssh",
            "typeVersion": 1,
            "position": [
                1712,
                -1456
            ],
            "id": "19956043-0201-4a04-b442-c208279576d3",
            "name": "Download_Pcap_file1",
            "credentials": {
                "sshPassword": {
                    "id": "DFeXLAheLkCzirwA",
                    "name": "SSH Password account"
                }
            }
        },
        {
            "parameters": {
                "jsCode": "/**\n * n8n Code Node: TheHive Alert Report Generator\n * Generates beautiful HTML report for EternalBlue attack with file attachment\n * Created: 2025-08-03 21:57:19 UTC by SB\n */\n\n// Get data from previous nodes\nconst uploadResult = $('Updaod_PCAP_Alert1').all()[0].json;\nconst alertData = $('Pcap_File_existe1').all()[0].json;\n\n// Parse the response data\nconst attachmentInfo = JSON.parse(uploadResult.response_data);\nconst attachment = attachmentInfo.attachments[0];\n\n// Current timestamp\nconst reportTimestamp = $input.first().json.file_info.uploaded_at;\nconst reportUser = \"SB\";\n\nconsole.log(`📊 Generating HTML report for alert ${alertData._id} by ${reportUser} at ${reportTimestamp}`);\n\n// Generate the HTML report\nconst htmlReport = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>TheHive Alert Report - ${alertData._id}</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        .security-button {\n            position: relative;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            padding: 18px 35px;\n            font-size: 1.1em;\n            font-weight: 600;\n            text-decoration: none;\n            color: white;\n            background: linear-gradient(45deg, #ff6b6b, #ee5a24, #e55039);\n            border: none;\n            border-radius: 50px;\n            box-shadow: \n                0 8px 25px rgba(238, 90, 36, 0.3),\n                0 4px 15px rgba(0, 0, 0, 0.2),\n                inset 0 1px 0 rgba(255, 255, 255, 0.2);\n            cursor: pointer;\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n            overflow: hidden;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            backdrop-filter: blur(10px);\n        }\n\n        .security-button::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n            transition: left 0.5s ease;\n        }\n\n        .security-button:hover::before {\n            left: 100%;\n        }\n\n        .security-button:hover {\n            transform: translateY(-3px) scale(1.05);\n            box-shadow: \n                0 15px 35px rgba(238, 90, 36, 0.4),\n                0 8px 25px rgba(0, 0, 0, 0.3),\n                inset 0 1px 0 rgba(255, 255, 255, 0.3);\n        }\n\n        .security-button:active {\n            transform: translateY(-1px) scale(1.02);\n            box-shadow: \n                0 5px 15px rgba(238, 90, 36, 0.4),\n                0 2px 8px rgba(0, 0, 0, 0.3);\n        }\n\n        .button-icon {\n            margin-right: 12px;\n            font-size: 1.3em;\n            animation: pulse 2s infinite;\n        }\n\n        .button-text {\n            position: relative;\n            z-index: 2;\n        }\n\n        .button-timestamp {\n            font-size: 0.8em;\n            margin-left: 10px;\n            opacity: 0.9;\n            font-weight: 400;\n        }\n\n        @keyframes pulse {\n            0%, 100% { transform: scale(1); }\n            50% { transform: scale(1.1); }\n        }\n\n        .container2 {\n            text-align: center;\n            background: rgba(255, 255, 255, 0.1);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 40px;\n            border: 1px solid rgba(255, 255, 255, 0.2);\n        }\n\n        .title {\n            color: white;\n            font-size: 2em;\n            margin-bottom: 20px;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n        }\n\n        .subtitle {\n            color: rgba(255, 255, 255, 0.8);\n            margin-bottom: 30px;\n            font-size: 1.1em;\n        }\n\n        .user-info {\n            color: rgba(255, 255, 255, 0.7);\n            font-size: 0.9em;\n            margin-top: 20px;\n        }\n        \n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 15px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n            color: white;\n            padding: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            font-size: 2.5em;\n            margin-bottom: 10px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .header .subtitle {\n            font-size: 1.2em;\n            opacity: 0.9;\n        }\n        \n        .status-banner {\n            background: ${uploadResult.success ? '#10ac84' : '#ee5a24'};\n            color: white;\n            text-align: center;\n            padding: 15px;\n            font-weight: bold;\n            font-size: 1.1em;\n        }\n        \n        .content {\n            padding: 40px;\n        }\n        \n        .section {\n            margin-bottom: 40px;\n            background: #f8f9fa;\n            border-radius: 10px;\n            padding: 25px;\n            border-left: 5px solid #667eea;\n        }\n        \n        .section h2 {\n            color: #2c3e50;\n            margin-bottom: 20px;\n            font-size: 1.8em;\n            border-bottom: 2px solid #ecf0f1;\n            padding-bottom: 10px;\n        }\n        \n        .info-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .info-card {\n            background: white;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n            border: 1px solid #e0e0e0;\n        }\n        \n        .info-card h3 {\n            color: #34495e;\n            margin-bottom: 15px;\n            font-size: 1.3em;\n            display: flex;\n            align-items: center;\n        }\n        \n        .info-card .emoji {\n            margin-right: 10px;\n            font-size: 1.5em;\n        }\n        \n        .info-item {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 10px;\n            padding: 8px 0;\n            border-bottom: 1px solid #ecf0f1;\n        }\n        \n        .info-item:last-child {\n            border-bottom: none;\n        }\n        \n        .info-label {\n            font-weight: 600;\n            color: #555;\n        }\n        \n        .info-value {\n            color: #2c3e50;\n            word-break: break-all;\n        }\n        \n        .success {\n            color: #27ae60;\n            font-weight: bold;\n        }\n        \n        .warning {\n            color: #f39c12;\n            font-weight: bold;\n        }\n        \n        .error {\n            color: #e74c3c;\n            font-weight: bold;\n        }\n        \n        .critical {\n            background: #fff5f5;\n            border: 2px solid #fc8181;\n            border-radius: 8px;\n            padding: 15px;\n            margin: 15px 0;\n        }\n        \n        .hash-list {\n            background: #f7fafc;\n            padding: 15px;\n            border-radius: 5px;\n            margin: 10px 0;\n            font-family: 'Courier New', monospace;\n            font-size: 0.9em;\n        }\n        \n        .tag {\n            display: inline-block;\n            background: #667eea;\n            color: white;\n            padding: 5px 12px;\n            border-radius: 20px;\n            margin: 3px;\n            font-size: 0.85em;\n        }\n        \n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 20px;\n            font-size: 0.9em;\n        }\n        \n        .timeline {\n            position: relative;\n            padding-left: 30px;\n        }\n        \n        .timeline::before {\n            content: '';\n            position: absolute;\n            left: 15px;\n            top: 0;\n            bottom: 0;\n            width: 2px;\n            background: #667eea;\n        }\n        \n        .timeline-item {\n            position: relative;\n            margin-bottom: 20px;\n            background: white;\n            padding: 15px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .timeline-item::before {\n            content: '';\n            position: absolute;\n            left: -22px;\n            top: 20px;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background: #667eea;\n            border: 3px solid white;\n        }\n        \n        @media (max-width: 768px) {\n            .info-grid {\n                grid-template-columns: 1fr;\n            }\n            \n            .header h1 {\n                font-size: 2em;\n            }\n            \n            .content {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <h1>🛡️ TheHive Security Alert Report</h1>\n            <div class=\"subtitle\">EternalBlue Attack Analysis & File Processing</div>\n        </div>\n        \n        <!-- Status Banner -->\n        <div class=\"status-banner\">\n            ${uploadResult.success ? '✅ File Successfully Attached to Alert' : '❌ File Attachment Failed'}\n        </div>\n        \n        <!-- Content -->\n        <div class=\"content\">\n            <!-- Alert Overview -->\n            <div class=\"section\">\n                <h2>🚨 Alert Overview</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📋</span>Alert Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Alert ID:</span>\n                            <span class=\"info-value\">${alertData._id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Title:</span>\n                            <span class=\"info-value\">${alertData.title}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Type:</span>\n                            <span class=\"info-value\">${alertData.type}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Status:</span>\n                            <span class=\"info-value warning\">${alertData.status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Severity:</span>\n                            <span class=\"info-value error\">Level ${alertData.severity}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created:</span>\n                            <span class=\"info-value\">${new Date(alertData.createdAt).toLocaleString()}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">🎯</span>Attack Details</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source IP:</span>\n                            <span class=\"info-value error\">${alertData.body.source_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Target IP:</span>\n                            <span class=\"info-value\">${alertData.body.destination_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Phase:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.phase}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Status:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.attack_status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Priority:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.priority_level}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection:</span>\n                            <span class=\"info-value\">${new Date(alertData.body.timestamp).toLocaleString()}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"critical\">\n                    <h3>🚨 Critical Information</h3>\n                    <p><strong>Signature:</strong> ${alertData.body.signature}</p>\n                    <p><strong>SMB Packets:</strong> ${alertData.body.advanced_analysis.smb_packet_count}</p>\n                    <p><strong>Large Packets:</strong> ${alertData.body.advanced_analysis.large_packet_count}</p>\n                </div>\n                \n                <div style=\"margin-top: 15px;\">\n                    <strong>Tags:</strong>\n                    ${alertData.tags.map(tag => `<span class=\"tag\">${tag}</span>`).join('')}\n                </div>\n            </div>\n            \n            <!-- File Processing Results -->\n            <div class=\"section\">\n                <h2>📎 File Attachment Results</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📄</span>File Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Filename:</span>\n                            <span class=\"info-value\">${uploadResult.file_info.name}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Size:</span>\n                            <span class=\"info-value\">${uploadResult.file_info.size.toLocaleString()} bytes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Upload Status:</span>\n                            <span class=\"info-value ${uploadResult.success ? 'success' : 'error'}\">\n                                ${uploadResult.success ? '✅ SUCCESS' : '❌ FAILED'}\n                            </span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">HTTP Status:</span>\n                            <span class=\"info-value\">${uploadResult.status_code}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed By:</span>\n                            <span class=\"info-value\">${uploadResult.processed_by}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed At:</span>\n                            <span class=\"info-value\">${uploadResult.processed_at}</span>\n                        </div>\n                    </div>\n                    \n                    ${uploadResult.success ? `\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">🔗</span>TheHive Attachment</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Attachment ID:</span>\n                            <span class=\"info-value\">${attachment._id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Content Type:</span>\n                            <span class=\"info-value\">${attachment.contentType}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created By:</span>\n                            <span class=\"info-value\">${attachment._createdBy}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created At:</span>\n                            <span class=\"info-value\">${new Date(attachment._createdAt).toLocaleString()}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">API Path:</span>\n                            <span class=\"info-value\">${attachment.path}</span>\n                        </div>\n                    </div>\n                    ` : ''}\n                </div>\n                \n                ${uploadResult.success ? `\n                <div class=\"hash-list\">\n                    <strong>File Hashes:</strong><br>\n                    <strong>SHA256:</strong> ${attachment.hashes[0]}<br>\n                    <strong>SHA1:</strong> ${attachment.hashes[1]}<br>\n                    <strong>MD5:</strong> ${attachment.hashes[2]}\n                </div>\n                ` : ''}\n            </div>\n            \n            <!-- Processing Timeline -->\n            <div class=\"section\">\n                <h2>⏱️ Processing Timeline</h2>\n                <div class=\"timeline\">\n                    <div class=\"timeline-item\">\n                        <strong>Attack Detection</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.body.timestamp).toLocaleString()}</span><br>\n                        EternalBlue Phase 2 attack detected by Suricata\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Alert Creation</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.createdAt).toLocaleString()}</span><br>\n                        Alert ${alertData._id} created in TheHive\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>File Processing</strong><br>\n                        <span style=\"color: #666;\">${uploadResult.processed_at}</span><br>\n                        PCAP file processed and attached by ${uploadResult.processed_by}\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Report Generation</strong><br>\n                        <span style=\"color: #666;\">${reportTimestamp}</span><br>\n                        Comprehensive report generated by ${reportUser}\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Technical Details -->\n            <div class=\"section\">\n                <h2>🔧 Technical Details</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📊</span>Request Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Endpoint:</span>\n                            <span class=\"info-value\">${uploadResult.request_info.endpoint}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Body Size:</span>\n                            <span class=\"info-value\">${uploadResult.request_info.body_size.toLocaleString()} bytes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source:</span>\n                            <span class=\"info-value\">${alertData.source}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection Engine:</span>\n                            <span class=\"info-value\">${alertData.body.detection_engine}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📦</span>PCAP Analysis</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Original Path:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.pcap_file.path}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Packet Count:</span>\n                            <span class=\"info-value\">${alertData.body.pcap_file.packet_count}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">File SHA256:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.pcap_file.sha256}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Filter Used:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.attack_analysis.filter_used}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n   <div style=\"text-align: center; padding: 30px 0;\">\n            <a href=\"https://thehive.sbihi.soar.ma/alerts/${alertData._id}/details\" class=\"security-button\">\n                <span class=\"button-icon\">🚨</span>\n                <span class=\"button-text\">View Alert Report</span>\n                <span class=\"button-timestamp\">22:16</span>\n            </a>\n        </div>\n        \n        <!-- Footer -->\n        <div class=\"footer\">\n            <p>🛡️ Generated by SOAR Platform | User: ${reportUser} | ${reportTimestamp} UTC</p>\n            <p>TheHive Security Operations & Response | Powered by n8n Automation</p>\n        </div>\n    </div>\n    \n</body>\n\n    <style>\n        .ripple {\n            position: absolute;\n            border-radius: 50%;\n            background: rgba(255, 255, 255, 0.3);\n            transform: scale(0);\n            animation: ripple-animation 0.6s linear;\n            pointer-events: none;\n        }\n\n        @keyframes ripple-animation {\n            to {\n                transform: scale(4);\n                opacity: 0;\n            }\n        }\n    </style>\n</html>\n`;\n\nconsole.log(`✅ HTML report generated successfully - ${htmlReport.length} characters`);\n\n// Return the HTML report\nreturn {\n    json: {\n        success: true,\n        report_generated_by: reportUser,\n        report_generated_at: reportTimestamp,\n        alert_id: alertData._id,\n        file_attached: uploadResult.success,\n        reporte: htmlReport,\n        summary: {\n              to: \"soc-team@sbihi.soar.ma\", \n\n            attack_type: alertData.type,\n            source_ip: alertData.body.source_ip,\n            target_ip: alertData.body.destination_ip,\n            phase: alertData.body.attack_analysis.phase,\n            file_name: uploadResult.file_info.name,\n            file_size: uploadResult.file_info.size,\n            attachment_id: uploadResult.success ? JSON.parse(uploadResult.response_data).attachments[0]._id : null\n        }\n    },\n    \n};"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                2256,
                -1552
            ],
            "id": "112548bd-b69a-4b1a-bb93-8a87c91052d4",
            "name": "HTML report Generator1"
        },
        {
            "parameters": {
                "fromEmail": "admin@sbihi.soar.ma",
                "toEmail": "={{ $json.summary.to }}",
                "subject": "=🚨 Medium: EternalBlue Phase 1 Active Exploitation - Alert {{ $json.alert_id }} ",
                "html": "={{ $json.reporte }}",
                "options": {}
            },
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2.1,
            "position": [
                2592,
                -1552
            ],
            "id": "2a1704c9-2a8c-4106-83b3-a8e1a86aa8cf",
            "name": "Send email3",
            "webhookId": "a8fa8078-4f8a-499c-b12b-ae2b191004a8",
            "credentials": {
                "smtp": {
                    "id": "zCBfpjwyWbps8Afk",
                    "name": "SMTP account"
                }
            }
        },
        {
            "parameters": {
                "mode": "combine",
                "combineBy": "combineAll",
                "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
                1168,
                -1328
            ],
            "id": "6cbd2984-bc23-42ea-b628-b19c5ffc99f1",
            "name": "Merge4"
        },
        {
            "parameters": {
                "mode": "combine",
                "combineBy": "combineAll",
                "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
                1280,
                -384
            ],
            "id": "feeb7ef2-2f27-4ea6-9139-9122ecc2966c",
            "name": "Merge5"
        },
        {
            "parameters": {
                "jsCode": "/**\n * n8n Code Node: TheHive Alert Report Generator\n * Generates beautiful HTML report for EternalBlue attack with file attachment\n * Created: 2025-08-03 21:57:19 UTC by SB\n */\n\n// Get data from previous nodes\nconst uploadResult = $('Updaod_PCAP_Alert2').all()[0].json;\nconst alertData = $('Pcap_File_existe2').all()[0].json;\n\n// Parse the response data\nconst attachmentInfo = JSON.parse(uploadResult.response_data);\nconst attachment = attachmentInfo.attachments[0];\n\n// Current timestamp\nconst reportTimestamp = $input.first().json.file_info.uploaded_at;\nconst reportUser = \"SB\";\n\nconsole.log(`📊 Generating HTML report for alert ${alertData._id} by ${reportUser} at ${reportTimestamp}`);\n\n// Generate the HTML report\nconst htmlReport = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>TheHive Alert Report - ${alertData._id}</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n        .security-button {\n            position: relative;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            padding: 18px 35px;\n            font-size: 1.1em;\n            font-weight: 600;\n            text-decoration: none;\n            color: white;\n            background: linear-gradient(45deg, #ff6b6b, #ee5a24, #e55039);\n            border: none;\n            border-radius: 50px;\n            box-shadow: \n                0 8px 25px rgba(238, 90, 36, 0.3),\n                0 4px 15px rgba(0, 0, 0, 0.2),\n                inset 0 1px 0 rgba(255, 255, 255, 0.2);\n            cursor: pointer;\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n            overflow: hidden;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n            backdrop-filter: blur(10px);\n        }\n\n        .security-button::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n            transition: left 0.5s ease;\n        }\n\n        .security-button:hover::before {\n            left: 100%;\n        }\n\n        .security-button:hover {\n            transform: translateY(-3px) scale(1.05);\n            box-shadow: \n                0 15px 35px rgba(238, 90, 36, 0.4),\n                0 8px 25px rgba(0, 0, 0, 0.3),\n                inset 0 1px 0 rgba(255, 255, 255, 0.3);\n        }\n\n        .security-button:active {\n            transform: translateY(-1px) scale(1.02);\n            box-shadow: \n                0 5px 15px rgba(238, 90, 36, 0.4),\n                0 2px 8px rgba(0, 0, 0, 0.3);\n        }\n\n        .button-icon {\n            margin-right: 12px;\n            font-size: 1.3em;\n            animation: pulse 2s infinite;\n        }\n\n        .button-text {\n            position: relative;\n            z-index: 2;\n        }\n\n        .button-timestamp {\n            font-size: 0.8em;\n            margin-left: 10px;\n            opacity: 0.9;\n            font-weight: 400;\n        }\n\n        @keyframes pulse {\n            0%, 100% { transform: scale(1); }\n            50% { transform: scale(1.1); }\n        }\n\n        .container {\n            text-align: center;\n            background: rgba(255, 255, 255, 0.1);\n            backdrop-filter: blur(10px);\n            border-radius: 20px;\n            padding: 40px;\n            border: 1px solid rgba(255, 255, 255, 0.2);\n        }\n\n        .title {\n            color: white;\n            font-size: 2em;\n            margin-bottom: 20px;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n        }\n\n        .subtitle {\n            color: rgba(255, 255, 255, 0.8);\n            margin-bottom: 30px;\n            font-size: 1.1em;\n        }\n\n        .user-info {\n            color: rgba(255, 255, 255, 0.7);\n            font-size: 0.9em;\n            margin-top: 20px;\n        }\n        \n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n        }\n        \n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 15px;\n            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        \n        .header {\n            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n            color: white;\n            padding: 30px;\n            text-align: center;\n        }\n        \n        .header h1 {\n            font-size: 2.5em;\n            margin-bottom: 10px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n        \n        .header .subtitle {\n            font-size: 1.2em;\n            opacity: 0.9;\n        }\n        \n        .status-banner {\n            background: ${uploadResult.success ? '#10ac84' : '#ee5a24'};\n            color: white;\n            text-align: center;\n            padding: 15px;\n            font-weight: bold;\n            font-size: 1.1em;\n        }\n        \n        .content {\n            padding: 40px;\n        }\n        \n        .section {\n            margin-bottom: 40px;\n            background: #f8f9fa;\n            border-radius: 10px;\n            padding: 25px;\n            border-left: 5px solid #667eea;\n        }\n        \n        .section h2 {\n            color: #2c3e50;\n            margin-bottom: 20px;\n            font-size: 1.8em;\n            border-bottom: 2px solid #ecf0f1;\n            padding-bottom: 10px;\n        }\n        \n        .info-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        \n        .info-card {\n            background: white;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n            border: 1px solid #e0e0e0;\n        }\n        \n        .info-card h3 {\n            color: #34495e;\n            margin-bottom: 15px;\n            font-size: 1.3em;\n            display: flex;\n            align-items: center;\n        }\n        \n        .info-card .emoji {\n            margin-right: 10px;\n            font-size: 1.5em;\n        }\n        \n        .info-item {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 10px;\n            padding: 8px 0;\n            border-bottom: 1px solid #ecf0f1;\n        }\n        \n        .info-item:last-child {\n            border-bottom: none;\n        }\n        \n        .info-label {\n            font-weight: 600;\n            color: #555;\n        }\n        \n        .info-value {\n            color: #2c3e50;\n            word-break: break-all;\n        }\n        \n        .success {\n            color: #27ae60;\n            font-weight: bold;\n        }\n        \n        .warning {\n            color: #f39c12;\n            font-weight: bold;\n        }\n        \n        .error {\n            color: #e74c3c;\n            font-weight: bold;\n        }\n        \n        .critical {\n            background: #fff5f5;\n            border: 2px solid #fc8181;\n            border-radius: 8px;\n            padding: 15px;\n            margin: 15px 0;\n        }\n        \n        .hash-list {\n            background: #f7fafc;\n            padding: 15px;\n            border-radius: 5px;\n            margin: 10px 0;\n            font-family: 'Courier New', monospace;\n            font-size: 0.9em;\n        }\n        \n        .tag {\n            display: inline-block;\n            background: #667eea;\n            color: white;\n            padding: 5px 12px;\n            border-radius: 20px;\n            margin: 3px;\n            font-size: 0.85em;\n        }\n        \n        .footer {\n            background: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 20px;\n            font-size: 0.9em;\n        }\n        \n        .timeline {\n            position: relative;\n            padding-left: 30px;\n        }\n        \n        .timeline::before {\n            content: '';\n            position: absolute;\n            left: 15px;\n            top: 0;\n            bottom: 0;\n            width: 2px;\n            background: #667eea;\n        }\n        \n        .timeline-item {\n            position: relative;\n            margin-bottom: 20px;\n            background: white;\n            padding: 15px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n        \n        .timeline-item::before {\n            content: '';\n            position: absolute;\n            left: -22px;\n            top: 20px;\n            width: 12px;\n            height: 12px;\n            border-radius: 50%;\n            background: #667eea;\n            border: 3px solid white;\n        }\n        \n        @media (max-width: 768px) {\n            .info-grid {\n                grid-template-columns: 1fr;\n            }\n            \n            .header h1 {\n                font-size: 2em;\n            }\n            \n            .content {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <h1>🛡️ TheHive Security Alert Report</h1>\n            <div class=\"subtitle\">EternalBlue Attack Analysis & File Processing</div>\n        </div>\n        \n        <!-- Status Banner -->\n        <div class=\"status-banner\">\n            ${uploadResult.success ? '✅ File Successfully Attached to Alert' : '❌ File Attachment Failed'}\n        </div>\n        \n        <!-- Content -->\n        <div class=\"content\">\n            <!-- Alert Overview -->\n            <div class=\"section\">\n                <h2>🚨 Alert Overview</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📋</span>Alert Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Alert ID:</span>\n                            <span class=\"info-value\">${alertData._id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Title:</span>\n                            <span class=\"info-value\">${alertData.title}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Type:</span>\n                            <span class=\"info-value\">${alertData.type}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Status:</span>\n                            <span class=\"info-value warning\">${alertData.status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Severity:</span>\n                            <span class=\"info-value error\">Level ${alertData.severity}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created:</span>\n                            <span class=\"info-value\">${new Date(alertData.createdAt).toLocaleString()}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">🎯</span>Attack Details</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source IP:</span>\n                            <span class=\"info-value error\">${alertData.body.source_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Target IP:</span>\n                            <span class=\"info-value\">${alertData.body.destination_ip}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Phase:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.phase}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Status:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.attack_status}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Priority:</span>\n                            <span class=\"info-value error\">${alertData.body.attack_analysis.priority_level}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection:</span>\n                            <span class=\"info-value\">${new Date(alertData.body.timestamp).toLocaleString()}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"critical\">\n                    <h3>🚨 Critical Information</h3>\n                    <p><strong>Signature:</strong> ${alertData.body.signature}</p>\n                    <p><strong>SMB Packets:</strong> ${alertData.body.advanced_analysis.smb_packet_count}</p>\n                    <p><strong>Large Packets:</strong> ${alertData.body.advanced_analysis.large_packet_count}</p>\n                </div>\n                \n                <div style=\"margin-top: 15px;\">\n                    <strong>Tags:</strong>\n                    ${alertData.tags.map(tag => `<span class=\"tag\">${tag}</span>`).join('')}\n                </div>\n            </div>\n            \n            <!-- File Processing Results -->\n            <div class=\"section\">\n                <h2>📎 File Attachment Results</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📄</span>File Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Filename:</span>\n                            <span class=\"info-value\">${uploadResult.file_info.name}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Size:</span>\n                            <span class=\"info-value\">${uploadResult.file_info.size.toLocaleString()} bytes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Upload Status:</span>\n                            <span class=\"info-value ${uploadResult.success ? 'success' : 'error'}\">\n                                ${uploadResult.success ? '✅ SUCCESS' : '❌ FAILED'}\n                            </span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">HTTP Status:</span>\n                            <span class=\"info-value\">${uploadResult.status_code}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed By:</span>\n                            <span class=\"info-value\">${uploadResult.processed_by}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Processed At:</span>\n                            <span class=\"info-value\">${uploadResult.processed_at}</span>\n                        </div>\n                    </div>\n                    \n                    ${uploadResult.success ? `\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">🔗</span>TheHive Attachment</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Attachment ID:</span>\n                            <span class=\"info-value\">${attachment._id}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Content Type:</span>\n                            <span class=\"info-value\">${attachment.contentType}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created By:</span>\n                            <span class=\"info-value\">${attachment._createdBy}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Created At:</span>\n                            <span class=\"info-value\">${new Date(attachment._createdAt).toLocaleString()}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">API Path:</span>\n                            <span class=\"info-value\">${attachment.path}</span>\n                        </div>\n                    </div>\n                    ` : ''}\n                </div>\n                \n                ${uploadResult.success ? `\n                <div class=\"hash-list\">\n                    <strong>File Hashes:</strong><br>\n                    <strong>SHA256:</strong> ${attachment.hashes[0]}<br>\n                    <strong>SHA1:</strong> ${attachment.hashes[1]}<br>\n                    <strong>MD5:</strong> ${attachment.hashes[2]}\n                </div>\n                ` : ''}\n            </div>\n            \n            <!-- Processing Timeline -->\n            <div class=\"section\">\n                <h2>⏱️ Processing Timeline</h2>\n                <div class=\"timeline\">\n                    <div class=\"timeline-item\">\n                        <strong>Attack Detection</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.body.timestamp).toLocaleString()}</span><br>\n                        EternalBlue Phase 2 attack detected by Suricata\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Alert Creation</strong><br>\n                        <span style=\"color: #666;\">${new Date(alertData.createdAt).toLocaleString()}</span><br>\n                        Alert ${alertData._id} created in TheHive\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>File Processing</strong><br>\n                        <span style=\"color: #666;\">${uploadResult.processed_at}</span><br>\n                        PCAP file processed and attached by ${uploadResult.processed_by}\n                    </div>\n                    <div class=\"timeline-item\">\n                        <strong>Report Generation</strong><br>\n                        <span style=\"color: #666;\">${reportTimestamp}</span><br>\n                        Comprehensive report generated by ${reportUser}\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Technical Details -->\n            <div class=\"section\">\n                <h2>🔧 Technical Details</h2>\n                <div class=\"info-grid\">\n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📊</span>Request Information</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Endpoint:</span>\n                            <span class=\"info-value\">${uploadResult.request_info.endpoint}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Body Size:</span>\n                            <span class=\"info-value\">${uploadResult.request_info.body_size.toLocaleString()} bytes</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Source:</span>\n                            <span class=\"info-value\">${alertData.source}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Detection Engine:</span>\n                            <span class=\"info-value\">${alertData.body.detection_engine}</span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"info-card\">\n                        <h3><span class=\"emoji\">📦</span>PCAP Analysis</h3>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Original Path:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.pcap_file.path}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Packet Count:</span>\n                            <span class=\"info-value\">${alertData.body.pcap_file.packet_count}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">File SHA256:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.pcap_file.sha256}</span>\n                        </div>\n                        <div class=\"info-item\">\n                            <span class=\"info-label\">Filter Used:</span>\n                            <span class=\"info-value\" style=\"font-size: 0.8em;\">${alertData.body.attack_analysis.filter_used}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n         <div>\n       \n        <a href=\"https://thehive.sbihi.soar.ma/alerts/${alertData._id}/details\" class=\"security-button\">\n            <span class=\"button-icon\">🚨</span>\n            <span class=\"button-text\">View Alert Report</span>\n            <span class=\"button-timestamp\">22:16</span>\n        </a>\n        \n      \n    </div>\n        \n        <!-- Footer -->\n        <div class=\"footer\">\n            <p>🛡️ Generated by SOAR Platform | User: ${reportUser} | ${reportTimestamp} UTC</p>\n            <p>TheHive Security Operations & Response | Powered by n8n Automation</p>\n        </div>\n    </div>\n    \n</body>\n\n    <style>\n        .ripple {\n            position: absolute;\n            border-radius: 50%;\n            background: rgba(255, 255, 255, 0.3);\n            transform: scale(0);\n            animation: ripple-animation 0.6s linear;\n            pointer-events: none;\n        }\n\n        @keyframes ripple-animation {\n            to {\n                transform: scale(4);\n                opacity: 0;\n            }\n        }\n    </style>\n</html>\n`;\n\nconsole.log(`✅ HTML report generated successfully - ${htmlReport.length} characters`);\n\n// Return the HTML report\nreturn {\n    json: {\n        success: true,\n        report_generated_by: reportUser,\n        report_generated_at: reportTimestamp,\n        alert_id: alertData._id,\n        file_attached: uploadResult.success,\n        reporte: htmlReport,\n        summary: {\n              to: \"soc-team@sbihi.soar.ma\", \n\n            attack_type: alertData.type,\n            source_ip: alertData.body.source_ip,\n            target_ip: alertData.body.destination_ip,\n            phase: alertData.body.attack_analysis.phase,\n            file_name: uploadResult.file_info.name,\n            file_size: uploadResult.file_info.size,\n            attachment_id: uploadResult.success ? JSON.parse(uploadResult.response_data).attachments[0]._id : null\n        }\n    },\n    \n};"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                2240,
                -608
            ],
            "id": "20a22313-b321-4966-ba45-ff58292a8449",
            "name": "HTML report Generator2"
        },
        {
            "parameters": {
                "mode": "runOnceForEachItem",
                "jsCode": "/**\n * n8n Code Node: TheHive Alert File Attachment\n * Fixed version - 2025-08-03 21:06:26 by imi-SB\n */\n\n// Import modules (available in n8n)\nconst { URL } = require('url');\nconst https = require('https');\nconst http = require('http');\n\n// Configuration\nconst API_KEY = 'HSTx8PnJZNVvHwYFGs+564VD7pfqsRAj';\nconst THEHIVE_URL = 'https://thehive.sbihi.soar.ma';\nconst ALERT_ID = $json._id;\nconst FILE_NAME = $input.item.binary.data.fileName || 'attachment.pcap';\n\nconsole.log(`🚀 Starting file upload - User: imi-SB | Time: 2025-08-03 21:06:26`);\nconsole.log(`📝 Alert ID: ${ALERT_ID} | File: ${FILE_NAME}`);\n\nasync function attachFile() {\n    return new Promise((resolve, reject) => {\n        const endpoint = `/api/v1/alert/${ALERT_ID}/attachments`;\n        const url = new URL(endpoint, THEHIVE_URL);\n        \n        console.log(`🌐 URL: ${url.href}`);\n\n        // Get binary data from n8n input\n        const binaryData = $input.item.binary.data.data;\n        const file_buffer = Buffer.from(binaryData, 'base64');\n        \n        console.log(`📤 Preparing ${FILE_NAME} (${file_buffer.length} bytes) for TheHive alert ${ALERT_ID}`);\n\n        // Build multipart body\n        const boundary = \"----WebKitFormBoundarybwyeFEHh4C1CJwfR\";\n        \n        const body_parts = [\n            `--${boundary}`,\n            `Content-Disposition: form-data; name=\"attachments\"; filename=\"${FILE_NAME}\"`,\n            `Content-Type: application/octet-stream`,\n            `` // Empty line before binary content\n        ];\n\n        const header_text = Buffer.from(body_parts.join('\\r\\n') + '\\r\\n', 'utf-8');\n        console.log(`📋 Header: ${header_text.length} bytes`);\n\n        const footer_parts = [\n            `\\r\\n--${boundary}\\r\\n`,\n            `Content-Disposition: form-data; name=\"canRename\"\\r\\n\\r\\ntrue\\r\\n--${boundary}--\\r\\n`\n        ];\n        const footer_text = Buffer.from(footer_parts.join(''), 'utf-8');\n        console.log(`📋 Footer: ${footer_text.length} bytes`);\n\n        // Combine all parts\n        const multipart_body = Buffer.concat([header_text, file_buffer, footer_text]);\n        console.log(`📦 Total body size: ${multipart_body.length} bytes`);\n\n        // Headers\n        const headers = {\n            'Authorization': `Bearer ${API_KEY}`,\n            'Accept': 'application/json, text/plain, */*',\n            'Accept-Language': 'fr-FR,fr;q=0.9',\n            'Content-Type': `multipart/form-data; boundary=${boundary}`,\n            'Content-Length': multipart_body.length,\n            'Origin': 'https://thehive.sbihi.soar.ma',\n            'Referer': `https://thehive.sbihi.soar.ma/alerts/${ALERT_ID}/attachments`,\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        };\n\n        // Request options\n        const requestModule = url.protocol === 'https:' ? https : http;\n        const options = {\n            hostname: url.hostname,\n            port: url.port || (url.protocol === 'https:' ? 443 : 80),\n            path: url.pathname,\n            method: 'POST',\n            headers: headers,\n            // Add timeout and SSL options\n            timeout: 30000,\n            rejectUnauthorized: false // For self-signed certificates\n        };\n\n        console.log(`🔄 Making POST request to ${url.pathname}`);\n\n        // Make the request\n        const req = requestModule.request(options, (res) => {\n            let response_data = '';\n            \n            console.log(`📊 Response Status: ${res.statusCode}`);\n            console.log(`📋 Response Headers:`, res.headers);\n\n            res.on('data', (chunk) => {\n                response_data += chunk;\n            });\n\n            res.on('end', () => {\n                console.log(`📋 Response Body: ${response_data}`);\n\n                const result = {\n                    success: res.statusCode === 200 || res.statusCode === 201,\n                    status_code: res.statusCode,\n                    response: response_data,\n                    file_info: {\n                        name: FILE_NAME,\n                        size: file_buffer.length,\n                        uploaded_by: \"imi-SB\",\n                        uploaded_at: \"2025-08-03 21:06:26\"\n                    },\n                    request_info: {\n                        alert_id: ALERT_ID,\n                        endpoint: endpoint,\n                        body_size: multipart_body.length\n                    }\n                };\n\n                if (result.success) {\n                    console.log('✅ File attached successfully!');\n                } else {\n                    console.log('❌ Attachment failed!');\n                }\n\n                resolve(result);\n            });\n        });\n\n        req.on('error', (error) => {\n            console.error('❌ Request error:', error);\n            reject({\n                success: false,\n                error: error.message,\n                file_info: {\n                    name: FILE_NAME,\n                    size: file_buffer.length\n                }\n            });\n        });\n\n        req.on('timeout', () => {\n            console.error('❌ Request timeout');\n            req.destroy();\n            reject({\n                success: false,\n                error: 'Request timeout',\n                file_info: {\n                    name: FILE_NAME,\n                    size: file_buffer.length\n                }\n            });\n        });\n\n        // Write the body and end the request\n        req.write(multipart_body);\n        req.end();\n    });\n}\n\n// Execute the upload and return results\ntry {\n    const result = await attachFile();\n    \n    return {\n        json: {\n            success: result.success,\n            status_code: result.status_code,\n            response_data: result.response,\n            file_info: result.file_info,\n            request_info: result.request_info,\n            processed_by: \"SB\",\n            processed_at: \"2025-08-03 21:06:26\"\n        }\n    };\n    \n} catch (error) {\n    console.error('💥 Upload failed:', error);\n    \n    return {\n        json: {\n            success: false,\n            error: error.error || error.message,\n            file_info: error.file_info || {\n                name: FILE_NAME,\n                size: 0\n            },\n            processed_by: \"SB\",\n            processed_at: \"2025-08-03 21:06:26\"\n        }\n    };\n}"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                1936,
                -512
            ],
            "id": "ca0de58f-b0d4-4cb0-bd3d-c9f0af30c63b",
            "name": "Updaod_PCAP_Alert2"
        },
        {
            "parameters": {
                "conditions": {
                    "options": {
                        "caseSensitive": true,
                        "leftValue": "",
                        "typeValidation": "strict",
                        "version": 2
                    },
                    "conditions": [
                        {
                            "id": "2cca3f21-31f8-4ec6-a0ff-238f10f236f4",
                            "leftValue": "={{ $json.body.pcap_file.path }}",
                            "rightValue": "",
                            "operator": {
                                "type": "string",
                                "operation": "notEmpty",
                                "singleValue": true
                            }
                        }
                    ],
                    "combinator": "and"
                },
                "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
                1472,
                -384
            ],
            "id": "d92536ca-5e44-466a-a846-0051507855dc",
            "name": "Pcap_File_existe2"
        },
        {
            "parameters": {
                "resource": "file",
                "operation": "download",
                "path": "={{ $json.body.pcap_file.path }}",
                "options": {
                    "fileName": "={{ $json.body.attack_analysis.phase }}_{{ $json.body.attack_analysis.attack_status }}.pcap"
                }
            },
            "type": "n8n-nodes-base.ssh",
            "typeVersion": 1,
            "position": [
                1744,
                -512
            ],
            "id": "e7b346c5-f5a6-4b54-a2c8-66048ba6275b",
            "name": "Download_Pcap_file2",
            "credentials": {
                "sshPassword": {
                    "id": "DFeXLAheLkCzirwA",
                    "name": "SSH Password account"
                }
            }
        },
        {
            "parameters": {
                "fromEmail": "admin@sbihi.soar.ma",
                "toEmail": "={{ $json.summary.to }}",
                "subject": "=🚨 CRITICAL: EternalBlue Phase 2 Active Exploitation - Alert {{ $json.alert_id }} ",
                "html": "={{ $json.reporte }}",
                "options": {}
            },
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2.1,
            "position": [
                2656,
                -608
            ],
            "id": "a1c03d70-2e6c-409f-87c2-37c034b8d3ed",
            "name": "Send email4",
            "webhookId": "a8fa8078-4f8a-499c-b12b-ae2b191004a8",
            "credentials": {
                "smtp": {
                    "id": "zCBfpjwyWbps8Afk",
                    "name": "SMTP account"
                }
            }
        },
        {
            "parameters": {
                "chatId": "@SOC_Team",
                "text": "=🚨 CRITICAL MEDICAL SECURITY ALERT 🚨\n\n🏥 EternalBlue attack detected !\n\n📍 Target: {{ $('Merge4').item.json.body.destination_ip }}\n🎯 Attacker: {{ $('Merge4').item.json.body.source_ip }}\n⚠️ Phase: {{ $('Merge4').item.json.body.attack_analysis.phase }}\n🕐 Time: {{ $('Merge4').item.json.body.timestamp }}\n\n🚨 IMMEDIATE ACTIONS:\n• System isolation initiated\n• Incident response activated\n• Medical staff being notified\n\n📧 Full details sent via email\n📋 TheHive case created\n\n#EternalBlue #CriticalIncident #MedicalSecurity",
                "replyMarkup": "inlineKeyboard",
                "inlineKeyboard": {
                    "rows": [
                        {
                            "row": {
                                "buttons": [
                                    {
                                        "text": "👁️ See the Alert",
                                        "additionalFields": {
                                            "url": "=http://thehive.sbihi.soar.ma/alerts/{{ $json.request_info.alert_id }}/details"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "additionalFields": {}
            },
            "id": "d1de829c-615e-470c-bfa6-eb7112598cd2",
            "name": "Telegram Medical Alert1",
            "type": "n8n-nodes-base.telegram",
            "typeVersion": 1.1,
            "position": [
                2592,
                -1392
            ],
            "webhookId": "3376df6d-e30c-4813-b05c-d592f07c0250",
            "credentials": {
                "telegramApi": {
                    "id": "LOwniAO8FUxNCyIK",
                    "name": "Telegram account"
                }
            }
        },
        {
            "parameters": {
                "chatId": "@SOC_Team",
                "text": "=🚨 CRITICAL MEDICAL SECURITY ALERT 🚨\n\n🏥 EternalBlue attack detected !\n\n📍 Target: {{ $('Merge5').item.json.body.destination_ip }}\n🎯 Attacker: {{ $('Merge5').item.json.body.source_ip }}\n⚠️ Phase: {{ $('Merge5').item.json.body.attack_analysis.phase }}\n🕐 Time: {{ $('Merge5').item.json.body.timestamp }}\n\n🚨 IMMEDIATE ACTIONS:\n• System isolation initiated\n• Incident response activated\n• Medical staff being notified\n\n📧 Full details sent via email\n📋 TheHive case created\n\n#EternalBlue #CriticalIncident #MedicalSecurity",
                "replyMarkup": "inlineKeyboard",
                "inlineKeyboard": {
                    "rows": [
                        {
                            "row": {
                                "buttons": [
                                    {
                                        "text": "👁️ See the Alert",
                                        "additionalFields": {
                                            "url": "=http://thehive.sbihi.soar.ma/alerts/{{ $json.request_info.alert_id }}/details"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "additionalFields": {}
            },
            "id": "29763a97-957c-44c3-9fc2-0c50581ba68e",
            "name": "Telegram Medical Alert2",
            "type": "n8n-nodes-base.telegram",
            "typeVersion": 1.1,
            "position": [
                2656,
                -400
            ],
            "webhookId": "3376df6d-e30c-4813-b05c-d592f07c0250",
            "credentials": {
                "telegramApi": {
                    "id": "LOwniAO8FUxNCyIK",
                    "name": "Telegram account"
                }
            }
        },
        {
            "parameters": {
                "jsCode": "function generateEternalBlueAlertEmail(alert) {\n  function formatDate(ts) {\n    if (!ts) return '';\n    const date = new Date(ts);\n    return date.toLocaleString('en-GB', { hour12: false });\n  }\n  function removeAsterisks(str) {\n  return String(str || '').replace(/\\*/g, '');\n}\n  function escapeHtml(str) {\n    return String(str || '')\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\");\n  }\n\n  const body = alert.body || {};\n  const tags = (alert.tags || []).map(tag => `<span class=\"alert-tag\">${escapeHtml(tag)}</span>`).join(' ');\n  const pcapStatus = body.pcap_file?.extraction_error\n    ? `<span class=\"alert-error\">❌ ${escapeHtml(body.pcap_file.extraction_error)}</span>`\n    : (body.pcap_file?.filename\n        ? `<span class=\"alert-success\">✅ PCAP extracted: ${escapeHtml(body.pcap_file.filename)}</span>`\n        : `<span class=\"alert-warning\">⚠️ No PCAP available</span>`\n      );\n\n  return `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>EternalBlue Security Alert</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <style>\n    body {\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      color: #222;\n      margin: 0;\n      padding: 0 0 40px 0;\n    }\n    .container {\n      max-width: 650px;\n      margin: 40px auto;\n      background: #fff;\n      border-radius: 18px;\n      box-shadow: 0 8px 30px rgba(34,34,34,0.12);\n      overflow: hidden;\n      border: 1px solid #ececec;\n    }\n    .header {\n      background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);\n      color: #fff;\n      padding: 30px 30px 18px 30px;\n      text-align: center;\n    }\n    .header h1 {\n      margin: 0 0 10px 0;\n      font-weight: 700;\n      font-size: 2em;\n      letter-spacing: 1px;\n      text-shadow: 2px 2px 8px rgba(0,0,0,0.18);\n    }\n    .subtitle {\n      font-size: 1.2em;\n      opacity: 0.93;\n      margin-bottom: 7px;\n    }\n    .alert-tags {\n      margin-top: 8px;\n    }\n    .alert-tag {\n      display: inline-block;\n      background: #667eea;\n      color: #fff;\n      padding: 3px 11px;\n      border-radius: 16px;\n      margin: 2px 6px 2px 0;\n      font-size: 0.90em;\n      font-weight: 500;\n      letter-spacing: 0.5px;\n    }\n    .section {\n      padding: 35px 30px 20px 30px;\n      border-bottom: 1px solid #f0f0f0;\n    }\n    .section:last-child {\n      border-bottom: none;\n    }\n    .info-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(230px,1fr));\n      gap: 20px;\n      margin-bottom: 28px;\n    }\n    .info-card {\n      background: #f8fafd;\n      border-radius: 8px;\n      box-shadow: 0 2px 6px rgba(102,126,234,0.07);\n      padding: 18px 15px 14px 15px;\n      border: 1px solid #ececec;\n      margin-bottom: 10px;\n    }\n    .info-card h3 {\n      margin: 0 0 10px 0;\n      color: #2c3e50;\n      font-size: 1.07em;\n      font-weight: 600;\n      letter-spacing: 0.5px;\n    }\n    .info-item {\n      margin-bottom: 9px;\n      font-size: 1.01em;\n    }\n    .info-label {\n      font-weight: 600;\n      color: #555;\n      margin-right: 4px;\n    }\n    .status-banner {\n      font-size: 1.09em;\n      font-weight: bold;\n      text-align: center;\n      padding: 12px 0 12px 0;\n      background: #ffe8e1;\n      color: #e55039;\n      border-bottom: 1px solid #f8f8f8;\n      letter-spacing: 1px;\n    }\n    .alert-success { color: #10ac84; font-weight: bold; }\n    .alert-warning { color: #f39c12; font-weight: bold;}\n    .alert-error { color: #e74c3c; font-weight: bold;}\n    .critical-bloc {\n      background: #fff5f5;\n      border: 2px solid #fc8181;\n      border-radius: 8px;\n      padding: 14px 18px;\n      margin: 10px 0 15px 0;\n      font-size: 1em;\n    }\n    .description {\n      background: #f6f8fa;\n      color: #2d3748;\n      border-radius: 8px;\n      padding: 16px 15px;\n      margin: 12px 0;\n      font-size: 1.01em;\n      white-space: pre-line;\n      font-family: inherit;\n      border-left: 4px solid #667eea;\n    }\n    .footer {\n      background: #2c3e50;\n      color: #fff;\n      padding: 22px 20px;\n      text-align: center;\n      font-size: 0.95em;\n      border-radius: 0 0 18px 18px;\n      margin-top: 18px;\n    }\n    .thehive-link {\n      margin-top: 16px;\n      display: block;\n      text-align: center;\n      text-decoration: none;\n    }\n    .security-button {\n      display: inline-block;\n      background: linear-gradient(45deg, #ff6b6b, #ee5a24, #e55039);\n      color: #fff;\n      font-weight: 600;\n      padding: 15px 33px;\n      border-radius: 45px;\n      font-size: 1.07em;\n      text-decoration: none;\n      letter-spacing: 1px;\n      margin-top: 6px;\n      box-shadow: 0 6px 20px rgba(238, 90, 36, 0.17);\n      transition: background 0.22s, box-shadow 0.22s, transform 0.16s;\n      position: relative;\n      overflow: hidden;\n    }\n    .security-button:hover {\n      background: linear-gradient(45deg, #ee5a24, #ff6b6b, #e55039);\n      box-shadow: 0 10px 35px rgba(238, 90, 36, 0.22);\n      transform: translateY(-2px) scale(1.03);\n    }\n    @media (max-width: 600px) {\n      .container { margin: 0; border-radius: 0;}\n      .section { padding: 18px 8px 13px 8px;}\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>EternalBlue Security Alert</h1>\n      <div class=\"subtitle\">Automated Report from Suricata &amp; SOAR</div>\n      <div class=\"alert-tags\">${tags}</div>\n    </div>\n    <div class=\"status-banner\">\n      ${escapeHtml(alert.title)}\n    </div>\n    <div class=\"section\">\n      <div class=\"info-grid\">\n        <div class=\"info-card\">\n          <h3>Alert Details</h3>\n          <div class=\"info-item\"><span class=\"info-label\">Alert ID:</span> ${escapeHtml(alert._id)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Type:</span> ${escapeHtml(alert.type)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Status:</span> ${escapeHtml(alert.status)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Severity:</span> <span class=\"alert-error\">Level ${escapeHtml(alert.severity)}</span></div>\n          <div class=\"info-item\"><span class=\"info-label\">Created:</span> ${formatDate(alert.createdAt)}</div>\n        </div>\n        <div class=\"info-card\">\n          <h3>Attack Info</h3>\n          <div class=\"info-item\"><span class=\"info-label\">Source IP:</span> <span class=\"alert-error\">${escapeHtml(body.source_ip)}</span></div>\n          <div class=\"info-item\"><span class=\"info-label\">Target IP:</span> ${escapeHtml(body.destination_ip)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Phase:</span> <span class=\"alert-error\">${escapeHtml(body.attack_analysis?.phase)}</span></div>\n          <div class=\"info-item\"><span class=\"info-label\">Attack Status:</span> <span class=\"alert-error\">${escapeHtml(body.attack_analysis?.attack_status)}</span></div>\n          <div class=\"info-item\"><span class=\"info-label\">Priority:</span> <span class=\"alert-error\">${escapeHtml(body.attack_analysis?.priority_level)}</span></div>\n          <div class=\"info-item\"><span class=\"info-label\">Detection:</span> ${formatDate(body.timestamp)}</div>\n        </div>\n      </div>\n      <div class=\"critical-bloc\">\n        <div>Signature: ${escapeHtml(body.signature)}</div>\n        <div>${pcapStatus}</div>\n        ${body.error ? `<div class=\"alert-error\">Error: ${escapeHtml(body.error)}</div>` : ''}\n      </div>\n      <div class=\"description\">\n        ${removeAsterisks(alert.description)}\n      </div>\n    </div>\n    <div class=\"section\">\n      <div class=\"info-grid\">\n        <div class=\"info-card\">\n          <h3>Correlation</h3>\n          <div class=\"info-item\"><span class=\"info-label\">Session ID:</span> ${escapeHtml(body.correlation_data?.session_id)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Correlation File:</span> ${escapeHtml(body.correlation_data?.correlation_file)}</div>\n        </div>\n        <div class=\"info-card\">\n          <h3>Engine & Source</h3>\n          <div class=\"info-item\"><span class=\"info-label\">Engine:</span> ${escapeHtml(body.detection_engine)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Source:</span> ${escapeHtml(alert.source)}</div>\n          <div class=\"info-item\"><span class=\"info-label\">Reference:</span> ${escapeHtml(alert.sourceRef)}</div>\n        </div>\n      </div>\n      <div style=\"margin-top: 25px; text-align: center;\">\n        <a class=\"security-button thehive-link\"\n           href=\"https://thehive.sbihi.soar.ma/alerts/${encodeURIComponent(alert._id)}/details\" target=\"_blank\">\n          View Alert in TheHive\n        </a>\n      </div>\n    </div>\n    <div class=\"footer\">\n      Generated by SOAR Platform | Alert ID: ${escapeHtml(alert._id)}<br>\n      TheHive Security Operations &amp; Response | Powered by n8n Automation<br>\n      <span style=\"opacity:0.72;\">${formatDate(Date.now())} UTC</span>\n    </div>\n  </div>\n</body>\n</html>\n  `;\n}\n\n// Example usage:\nconst emailHtml = generateEternalBlueAlertEmail($input.first().json);\nreturn {\n  alert_id: $input.first().json._id,\n  to: \"soc-team@sbihi.soar.ma\",\n  emailHtml: emailHtml\n}"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
                1824,
                -1296
            ],
            "id": "159b076b-c499-4e7f-8dc8-5967ac135951",
            "name": "Code3"
        },
        {
            "parameters": {
                "fromEmail": "admin@sbihi.soar.ma",
                "toEmail": "={{ $json.to }}",
                "subject": "=🚨 Medium: EternalBlue Phase 1 Active Exploitation - Alert {{ $json.alert_id }} ",
                "html": "={{ $json.emailHtml }}",
                "options": {}
            },
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2.1,
            "position": [
                2160,
                -1296
            ],
            "id": "fa204f4e-d949-4cda-a5eb-2378b6dd5591",
            "name": "Send email5",
            "webhookId": "a8fa8078-4f8a-499c-b12b-ae2b191004a8",
            "credentials": {
                "smtp": {
                    "id": "zCBfpjwyWbps8Afk",
                    "name": "SMTP account"
                }
            }
        },
        {
            "parameters": {
                "chatId": "@SOC_Team",
                "text": "=🚨 CRITICAL MEDICAL SECURITY ALERT 🚨\n\n🏥 EternalBlue attack detected !\n\n📍 Target: {{ $('Merge4').item.json.body.destination_ip }}\n🎯 Attacker: {{ $('Merge4').item.json.body.source_ip }}\n⚠️ Phase: {{ $('Merge4').item.json.body.attack_analysis.phase }}\n🕐 Time: {{ $('Merge4').item.json.body.timestamp }}\n\n🚨 IMMEDIATE ACTIONS:\n• System isolation initiated\n• Incident response activated\n• Medical staff being notified\n\n📧 Full details sent via email\n📋 TheHive case created\n\n#EternalBlue #CriticalIncident #MedicalSecurity",
                "replyMarkup": "inlineKeyboard",
                "inlineKeyboard": {
                    "rows": [
                        {
                            "row": {
                                "buttons": [
                                    {
                                        "text": "👁️ See the Alert",
                                        "additionalFields": {
                                            "url": "=http://thehive.sbihi.soar.ma/alerts/{{ $json.alert_id }}/details"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                "additionalFields": {}
            },
            "id": "9977b935-ee6d-4dba-893d-83f0e736368a",
            "name": "Telegram Medical Alert3",
            "type": "n8n-nodes-base.telegram",
            "typeVersion": 1.1,
            "position": [
                2352,
                -1200
            ],
            "webhookId": "3376df6d-e30c-4813-b05c-d592f07c0250",
            "credentials": {
                "telegramApi": {
                    "id": "LOwniAO8FUxNCyIK",
                    "name": "Telegram account"
                }
            }
        }
    ],
    "connections": {
        "EternalBlue Webhook": {
            "main": [
                [
                    {
                        "node": "Phase 1 Detection",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Phase 2 Detection",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Phase 3/Critical Detection",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Phase 1 Detection": {
            "main": [
                [
                    {
                        "node": "TheHive - Phase 1 Alert",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Merge4",
                        "type": "main",
                        "index": 1
                    }
                ]
            ]
        },
        "Phase 2 Detection": {
            "main": [
                [
                    {
                        "node": "TheHive - Phase 2 Case",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Merge3",
                        "type": "main",
                        "index": 1
                    }
                ]
            ]
        },
        "Phase 3/Critical Detection": {
            "main": [
                [
                    {
                        "node": "TheHive - Critical Incident",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Merge5",
                        "type": "main",
                        "index": 1
                    }
                ],
                []
            ]
        },
        "TheHive - Phase 1 Alert": {
            "main": [
                [
                    {
                        "node": "Merge4",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "TheHive - Phase 2 Case": {
            "main": [
                [
                    {
                        "node": "Merge3",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "TheHive - Critical Incident": {
            "main": [
                [
                    {
                        "node": "Merge5",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Merge3": {
            "main": [
                [
                    {
                        "node": "Pcap_File_existe",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "HTML report Generator": {
            "main": [
                [
                    {
                        "node": "Send email2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Updaod_PCAP_Alert": {
            "main": [
                [
                    {
                        "node": "HTML report Generator",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Telegram Medical Alert",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Pcap_File_existe": {
            "main": [
                [
                    {
                        "node": "Download_Pcap_file",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Download_Pcap_file": {
            "main": [
                [
                    {
                        "node": "Updaod_PCAP_Alert",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Updaod_PCAP_Alert1": {
            "main": [
                [
                    {
                        "node": "HTML report Generator1",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Telegram Medical Alert1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Pcap_File_existe1": {
            "main": [
                [
                    {
                        "node": "Download_Pcap_file1",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Code3",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Download_Pcap_file1": {
            "main": [
                [
                    {
                        "node": "Updaod_PCAP_Alert1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "HTML report Generator1": {
            "main": [
                [
                    {
                        "node": "Send email3",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Merge4": {
            "main": [
                [
                    {
                        "node": "Pcap_File_existe1",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Merge5": {
            "main": [
                [
                    {
                        "node": "Pcap_File_existe2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "HTML report Generator2": {
            "main": [
                [
                    {
                        "node": "Send email4",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Updaod_PCAP_Alert2": {
            "main": [
                [
                    {
                        "node": "HTML report Generator2",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Telegram Medical Alert2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Pcap_File_existe2": {
            "main": [
                [
                    {
                        "node": "Download_Pcap_file2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Download_Pcap_file2": {
            "main": [
                [
                    {
                        "node": "Updaod_PCAP_Alert2",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Code3": {
            "main": [
                [
                    {
                        "node": "Send email5",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "Telegram Medical Alert3",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "pinData": {
        "EternalBlue Webhook": [
            {
                "headers": {
                    "host": "192.168.15.3:5678",
                    "user-agent": "curl/7.58.0",
                    "accept": "*/*",
                    "content-type": "application/json",
                    "content-length": "1726",
                    "expect": "100-continue"
                },
                "params": {},
                "query": {},
                "body": {
                    "alert_type": "eternalblue_multi_phase_detection",
                    "timestamp": "2025-07-30T19:04:44.225243+0100",
                    "source_ip": "192.168.15.10",
                    "destination_ip": "192.168.3.100",
                    "signature": "ETERNALBLUE PHASE 3 - Server Accepting Connections After Exploitation",
                    "attack_analysis": {
                        "phase": "PHASE_3_PAYLOAD",
                        "attack_status": "NEW_ATTACK",
                        "priority_level": "CRITICAL",
                        "extraction_method": "new_extraction",
                        "filter_used": "((src host 192.168.15.10 and dst host 192.168.3.100) or (src host 192.168.3.100 and dst host 192.168.15.10)) and (port 445 or port 139 or port 135)",
                        "extraction_status": "success"
                    },
                    "advanced_analysis": {
                        "smb_packet_count": 116,
                        "large_packet_count": 30,
                        "analysis_performed": true
                    },
                    "pcap_file": {
                        "path": "/var/log/suricata/extracted_attacks/eternalblue_phase-3-payload_192_168_15_10_to_192_168_3_100_20250730190444.pcap",
                        "filename": "eternalblue_phase-3-payload_192_168_15_10_to_192_168_3_100_20250730190444.pcap",
                        "size_bytes": 51686,
                        "packet_count": 116,
                        "sha256": "8835e63f0335a4e48589bba11e32ceb191a18d6f049981c6513fb077669a6cc1"
                    },
                    "investigation_priority": "critical",
                    "auto_created": true,
                    "detection_engine": "suricata_eternalblue_soar_v3.0",
                    "processing_timestamp": "2025-08-03T11:44:19.017Z",
                    "correlation_data": {
                        "session_id": "192.168.15.10_192.168.3.100",
                        "correlation_file": "/tmp/eternalblue_correlation/session_192_168_15_10_192_168_3_100.json"
                    },
                    "medical_environment": {
                        "is_medical_target": false,
                        "requires_immediate_response": true
                    }
                },
                "webhookUrl": "http://sbihi.soar.ma:5678/webhook/eternalblue-alert",
                "executionMode": "production"
            }
        ]
    },
    "meta": {
        "templateCredsSetupCompleted": true,
        "instanceId": "bfdb948841afc0ce6bec55b394199f16ae888966216c89472d4c9df5a77cd278"
    }
}