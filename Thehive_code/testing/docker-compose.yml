services:
  cassandra:
    image: "cassandra:${cassandra_image_version}"
    container_name: cassandra
    hostname: cassandra
    restart: unless-stopped
    user: ${UID}:${GID}
    environment:
      - CASSANDRA_CLUSTER_NAME=TheHive
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_NUM_TOKENS=4
      - HEAP_NEWSIZE=1280M
      - MAX_HEAP_SIZE=200M
    volumes:
      - ./cassandra/data:/var/lib/cassandra
      - ./cassandra/logs:/var/log/cassandra
    deploy:
      resources:
        limits:
          memory: 2G
    # Prevent swap https://docs.docker.com/engine/containers/resource_constraints/#prevent-a-container-from-using-swap
    memswap_limit: 2G
    networks:
      - thehive-cortex-network
    healthcheck:
      # Waiting for cqlsh command to succeed to make sure Cassandra is ready
      test: ["CMD-SHELL", "cqlsh -u cassandra -p cassandra -e 'describe keyspaces' || exit 1"]
      start_period: 120s
      interval: 2s
      timeout: 1s
      retries: 3
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "cassandra"
      com.strangebee.role: "database"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${cassandra_image_version}"
      com.strangebee.dependency: "None"

  elasticsearch:
    image: "elasticsearch:${elasticsearch_image_version}"
    container_name: elasticsearch
    hostname: elasticsearch
    restart: unless-stopped
    user: ${UID}:0
    environment:
      - http.host=0.0.0.0
      - discovery.type=single-node
      - cluster.name=hive
      - thread_pool.search.queue_size=100000
      - thread_pool.write.queue_size=100000
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${elasticsearch_password} # Password for "elastic" default user
      - ES_JAVA_OPTS=-Xms1G -Xmx1G
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/logs:/usr/share/elasticsearch/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 2G
    memswap_limit: 2G
    networks:
      - thehive-cortex-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f -s -u 'elastic:${elasticsearch_password}' http://elasticsearch:9200/_cat/health || exit 1"]
      start_period: 40s
      interval: 2s
      timeout: 1s
      retries: 5
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "elasticsearch"
      com.strangebee.role: "indexing"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${elasticsearch_image_version}"
      com.strangebee.dependency: "None"

  thehive:
    image: "strangebee/thehive:${thehive_image_version}"
    container_name: thehive
    hostname: thehive
    restart: unless-stopped
    command: '--no-config --no-config-secret'
    user: ${UID}:${GID}
    ports:
      - "9999:9000"
    dns:
      - 192.168.15.3
    environment:
      - |
        JAVA_OPTS=
          -Xms1280M
          -Xmx1280M
          -XX:MaxMetaspaceSize=400m
          -XX:ReservedCodeCacheSize=250m
    volumes:
      - ./thehive/config:/etc/thehive:ro
      - ./thehive/data/files:/opt/thp/thehive/files
      - ./thehive/logs:/var/log/thehive
    deploy:
      resources:
        limits:
          memory: 2G
    memswap_limit: 2G
    networks:
      - thehive-cortex-network
      - single-node_default
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f thehive:9000/thehive/api/status || exit 1"]
      start_period: 40s
      interval: 10s
      timeout: 1s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
      cassandra:
        condition: service_healthy
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "thehive"
      com.strangebee.role: "application"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${thehive_image_version}"
      com.strangebee.dependency: "elasticsearch, cassandra"

  cortex:
    image: "thehiveproject/cortex:${cortex_image_version}"
    container_name: cortex
    hostname: cortex
    restart: unless-stopped
    dns:
      - 192.168.15.3
    environment:
      - |
        JAVA_OPTS=
          -Xms1000M
          -Xmx1000M
          -XX:MaxMetaspaceSize=400m
          -XX:ReservedCodeCacheSize=250m
      - es_uri=http://elasticsearch:9200
      - job_directory=/tmp/cortex-jobs
      - docker_job_directory=${cortex_docker_job_directory}
    volumes:
      # Mounting docker socket in the container so that cortex can run jobs as containers
      - /var/run/docker.sock:/var/run/docker.sock
      # Storing jobs under /tmp for now
      - ./cortex/cortex-jobs:/tmp/cortex-jobs
      - ./cortex/config:/etc/cortex:ro
      - ./cortex/logs:/var/log/cortex
      - ./cortex/neurons:/opt/cortexneurons
    deploy:
      resources:
        limits:
          memory: 2G
    memswap_limit: 2G
    networks:
      - single-node_default
      - thehive-cortex-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f cortex:9001/cortex/api/status || exit 1"]
      start_period: 40s
      interval: 10s
      timeout: 1s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
    labels:
      com.strangebee.stack: "thehive-cortex-stack"
      com.strangebee.service: "cortex"
      com.strangebee.role: "application"
      com.strangebee.environment: "testing"
      com.strangebee.version: "${cortex_image_version}"
      com.strangebee.dependency: "elasticsearch"




networks:
  single-node_default:
    external: true
  thehive-cortex-network:
