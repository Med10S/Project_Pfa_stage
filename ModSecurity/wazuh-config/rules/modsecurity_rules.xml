<!--
  -  ModSecurity rules for Wazuh SIEM
  -  Created by: Med10S
  -  Date: August 11, 2025
  -  Purpose: Detect and classify XSS attacks from ModSecurity WAF
  -  
  -  Covers:
  -  - XSS attack detection and classification
  -  - Attack severity assessment  
  -  - Blocked vs allowed attack differentiation
  -  - Automated response triggers
  -  - Integration with SOAR platforms
  -->

<group name="modsecurity,web,attack,">

  <!-- =================================================================== -->
  <!-- ModSecurity Base Rules                                              -->
  <!-- =================================================================== -->

  <!-- Base rule for ModSecurity JSON audit logs -->
  <rule id="100001" level="0">
    <decoded_as>json</decoded_as>
    <field name="producer.modsecurity">ModSecurity</field>
    <description>ModSecurity audit log entry</description>
    <group>modsecurity,web,</group>
  </rule>

  <!-- DEBUG: Any ModSecurity transaction -->
  <rule id="100010" level="5">
    <if_sid>100001</if_sid>
    <description>ModSecurity: Transaction detected (DEBUG)</description>
    <group>modsecurity,debug,</group>
  </rule>

  <!-- ModSecurity transaction with security messages -->
  <rule id="100002" level="3">
    <if_sid>100001</if_sid>
    <field name="transaction.messages">XSS Attack</field>
    <description>ModSecurity security rule triggered</description>
    <group>modsecurity,security_alert,</group>
  </rule>

  <!-- =================================================================== -->
  <!-- XSS Attack Detection Rules                                          -->
  <!-- =================================================================== -->

  <!-- XSS Attack Detected and Blocked (Rule 1001) -->
  <rule id="100101" level="10">
    <if_sid>100002</if_sid>
    <field name="transaction.messages">ruleId":"1001"</field>
    <description>ModSecurity: XSS Attack Detected and Blocked (libinjection)</description>
    <group>modsecurity,xss,attack,blocked,</group>
    <info type="text">XSS attack using libinjection detection blocked by WAF</info>
    <info type="link">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</info>
  </rule>

  <!-- Script Tag XSS Attack (Rule 1002) -->
  <rule id="100102" level="10">
    <if_sid>100002</if_sid>
    <field name="transaction.messages">ruleId":"1002"</field>
    <description>ModSecurity: Script Tag XSS Attack Blocked</description>
    <group>modsecurity,xss,attack,script_tag,blocked,</group>
    <info type="text">HTML script tag injection attempt blocked by WAF</info>
  </rule>

  <!-- JavaScript Protocol XSS Attack (Rule 1003) -->
  <rule id="100103" level="10">
    <if_sid>100002</if_sid>
    <field name="transaction.messages">ruleId":"1003"</field>
    <description>ModSecurity: JavaScript Protocol XSS Attack Blocked</description>
    <group>modsecurity,xss,attack,javascript_protocol,blocked,</group>
    <info type="text">JavaScript protocol injection attempt blocked by WAF</info>
  </rule>

  <!-- Event Handler XSS Attack (Rule 1004) -->
  <rule id="100104" level="10">
    <if_sid>100002</if_sid>
    <field name="transaction.messages">ruleId":"1004"</field>
    <description>ModSecurity: Event Handler XSS Attack Blocked</description>
    <group>modsecurity,xss,attack,event_handler,blocked,</group>
    <info type="text">HTML event handler injection attempt blocked by WAF</info>
  </rule>

  <!-- =================================================================== -->
  <!-- Severity and Response Assessment Rules                              -->
  <!-- =================================================================== -->

  <!-- Critical XSS Attack (High frequency or successful) -->
  <rule id="100201" level="12" frequency="3" timeframe="300">
    <if_matched_sid>100101</if_matched_sid>
    <if_matched_sid>100102</if_matched_sid>
    <if_matched_sid>100103</if_matched_sid>
    <if_matched_sid>100104</if_matched_sid>
    <same_source_ip />
    <description>ModSecurity: Multiple XSS attacks from same source IP</description>
    <group>modsecurity,xss,attack,multiple_attacks,critical,</group>
    <info type="text">Same IP attempting multiple XSS attacks - possible automated attack</info>
  </rule>

  <!-- XSS Attack Allowed (Response code 200) - CRITICAL -->
  <rule id="100202" level="15">
    <if_sid>100002</if_sid>
    <field name="transaction.response.http_code">200</field>
    <description>ModSecurity: XSS Attack Allowed - WAF Bypass Detected</description>
    <group>modsecurity,xss,attack,bypass,allowed,critical,</group>
    <info type="text">XSS attack received HTTP 200 response - potential WAF bypass</info>
  </rule>

  <!-- Large payload XSS attack -->
  <rule id="100203" level="11">
    <if_sid>100101,100102,100103,100104</if_sid>
    <field name="transaction.request.uri">^.{500,}</field>
    <description>ModSecurity: Large payload XSS attack blocked</description>
    <group>modsecurity,xss,attack,large_payload,blocked,</group>
    <info type="text">XSS attack with unusually large payload detected</info>
  </rule>

  <!-- =================================================================== -->
  <!-- Custom Alert Log Rules (from log-processor.sh)                     -->
  <!-- =================================================================== -->

  <!-- Custom ModSecurity alert log format -->
  <rule id="100301" level="0">
    <decoded_as>syslog</decoded_as>
    <match>modsecurity-waf: XSS_ALERT:</match>
    <description>ModSecurity custom XSS alert</description>
    <group>modsecurity,custom_alert,</group>
  </rule>

  <!-- Parse custom XSS alert details -->
  <rule id="100302" level="10">
    <if_sid>100301</if_sid>
    <regex>severity="(\w+)".*client_ip="([^"]+)".*rule_id="([^"]+)".*xss_type="([^"]+)"</regex>
    <description>ModSecurity: Custom XSS Alert - $4 from $2</description>
    <group>modsecurity,xss,custom_alert,$1,</group>
    <info type="text">Custom processed XSS alert with enriched context</info>
  </rule>

  <!-- Critical custom alerts -->
  <rule id="100303" level="12">
    <if_sid>100302</if_sid>
    <regex>severity="CRITICAL"</regex>
    <description>ModSecurity: CRITICAL XSS Alert</description>
    <group>modsecurity,xss,critical,custom_alert,</group>
    <info type="text">Critical XSS attack detected by custom processing</info>
  </rule>

  <!-- =================================================================== -->
  <!-- Attack Source Analysis Rules                                        -->
  <!-- =================================================================== -->

  <!-- Known malicious patterns -->
  <rule id="100401" level="11">
    <if_sid>100101,100102,100103,100104</if_sid>
    <field name="transaction.request.headers.User-Agent">sqlmap|nikto|nmap|masscan|zap|burp|metasploit</field>
    <description>ModSecurity: XSS attack from known security tool</description>
    <group>modsecurity,xss,security_tool,blocked,</group>
    <info type="text">XSS attack originated from recognized security testing tool</info>
  </rule>

  <!-- Suspicious referrer patterns -->
  <rule id="100402" level="9">
    <if_sid>100101,100102,100103,100104</if_sid>
    <field name="transaction.request.headers.Referer">hack|exploit|xss|inject|payload</field>
    <description>ModSecurity: XSS attack with suspicious referrer</description>
    <group>modsecurity,xss,suspicious_referrer,blocked,</group>
    <info type="text">XSS attack with suspicious referrer header</info>
  </rule>

  <!-- =================================================================== -->
  <!-- Integration and Response Rules                                       -->
  <!-- =================================================================== -->

  <!-- Trigger SOAR integration -->
  <rule id="100501" level="13">
    <if_sid>100201,100202,100303</if_sid>
    <description>ModSecurity: XSS Attack - SOAR Integration Triggered</description>
    <group>modsecurity,xss,soar_trigger,response_needed,</group>
    <info type="text">High-severity XSS event requires SOAR platform investigation</info>
  </rule>

  <!-- Multiple attack vectors from same IP -->
  <rule id="100502" level="12" frequency="2" timeframe="600">
    <if_matched_sid>100101</if_matched_sid>
    <if_matched_sid>100102</if_matched_sid>
    <if_matched_sid>100103</if_matched_sid>
    <if_matched_sid>100104</if_matched_sid>
    <same_source_ip />
    <different_rule />
    <description>ModSecurity: Multiple XSS attack types from same IP</description>
    <group>modsecurity,xss,multiple_vectors,advanced_attack,</group>
    <info type="text">Attacker trying multiple XSS techniques - advanced threat</info>
  </rule>

  <!-- =================================================================== -->
  <!-- Composite Attack Detection                                          -->
  <!-- =================================================================== -->

  <!-- XSS followed by other suspicious activity -->
  <rule id="100601" level="11" timeframe="1800">
    <if_matched_sid>100101,100102,100103,100104</if_matched_sid>
    <if_matched_group>web_appsec_attack</if_matched_group>
    <same_source_ip />
    <description>ModSecurity: XSS attack followed by other web attacks</description>
    <group>modsecurity,xss,composite_attack,</group>
    <info type="text">XSS attack part of broader web application attack campaign</info>
  </rule>

  <!-- =================================================================== -->
  <!-- False Positive Reduction Rules                                      -->
  <!-- =================================================================== -->

  <!-- Internal network XSS testing -->
  <rule id="100701" level="5">
    <if_sid>100101,100102,100103,100104</if_sid>
    <srcip>192.168.0.0/16,10.0.0.0/8,172.16.0.0/12</srcip>
    <field name="transaction.request.headers.User-Agent">curl|wget|python|postman</field>
    <description>ModSecurity: XSS attack from internal network - likely testing</description>
    <group>modsecurity,xss,internal_testing,</group>
    <info type="text">XSS attack from internal IP with testing tool - likely legitimate security testing</info>
  </rule>

</group>
